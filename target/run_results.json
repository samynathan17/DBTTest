{"logs": [], "results": [{"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH source AS (\r\n       select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_oppo_stage_table_name') }} \r\n    ),renamed as(\r\n        SELECT\r\n        {{ dbt_utils.surrogate_key('id') }}  AS stage_id,\r\n        MASTER_LABEL AS stage_name,\r\n        SORT_ORDER AS stage_position,\r\n        NULL AS account_id,\r\n        IS_ACTIVE AS active_flag,\r\n        ID AS Source_id,\r\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\r\n        NULL AS lead_opp_flag,\r\n        IS_CLOSED AS IS_CLOSED,\r\n        IS_WON AS IS_WON,\r\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\r\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n       source\r\n    )    \r\n    \r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_OpportunityStages"], "unique_id": "model.DBTTest.stg_sf_OpportunityStages", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_OpportunityStages.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_OpportunityStages.sql", "name": "stg_sf_OpportunityStages", "resource_type": "model", "alias": "stg_sf_OpportunityStages", "checksum": {"name": "sha256", "checksum": "d9b32eaa80f400854ad6043f386bbcfa7ce2de897084af925673b56d18e0cf77"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_OpportunityStages.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n       select *  from salesforce.OPPORTUNITY_STAGE \n    ),renamed as(\n        SELECT\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS stage_id,\n        MASTER_LABEL AS stage_name,\n        SORT_ORDER AS stage_position,\n        NULL AS account_id,\n        IS_ACTIVE AS active_flag,\n        ID AS Source_id,\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        NULL AS lead_opp_flag,\n        IS_CLOSED AS IS_CLOSED,\n        IS_WON AS IS_WON,\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n       source\n    )    \n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n       select *  from salesforce.OPPORTUNITY_STAGE \n    ),renamed as(\n        SELECT\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n))  AS stage_id,\n        MASTER_LABEL AS stage_name,\n        SORT_ORDER AS stage_position,\n        NULL AS account_id,\n        IS_ACTIVE AS active_flag,\n        ID AS Source_id,\n        FORECAST_CATEGORY AS FORECAST_CATEGORY,\n        NULL AS lead_opp_flag,\n        IS_CLOSED AS IS_CLOSED,\n        IS_WON AS IS_WON,\n        DEFAULT_PROBABILITY AS OPPORTUNITY_STAGE,\n        'D_OPPORTUNITYSTAGES_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n       source\n    )    \n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.1896474361419678, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:52.666517Z", "completed_at": "2020-12-15T12:04:52.724617Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:52.725292Z", "completed_at": "2020-12-15T12:04:53.780936Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('salesforce_schema_name') }}.{{ var('salesforce_account_table_name') }} \r\n\r\n    ),renamed as (\r\n      select\r\n        {{ dbt_utils.surrogate_key('id') }} AS Account_ID,\r\n        NAME AS Account_Name,\r\n        TYPE AS Account_Type,\r\n        ID AS Source_ID,\r\n        IS_DELETED AS Active_Flag,\r\n        ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\r\n        INDUSTRY AS INDUSTRY,\r\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\r\n        OWNER_ID AS OWNER_ID,\r\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n    FROM source\r\n    )\r\n    \r\n{% elif var(\"sles_crm_etl\") == 'stitch' %}\r\n    WITH source AS (\r\n      select * from {{ var('salesforce_schema_name') }}.{{ var('salesforce_account_table_name') }} where not is_deleted\r\n    ),renamed as (\r\n      select\r\n      \r\n        id ,\r\n        name,\r\n        -- keys\r\n        parent_id,\r\n        owner_id \r\n        from source\r\n       )\r\n\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_account"], "unique_id": "model.DBTTest.stg_sf_account", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_account.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_account.sql", "name": "stg_sf_account", "resource_type": "model", "alias": "stg_sf_account", "checksum": {"name": "sha256", "checksum": "96c128b307fadfb6217032cd79979e57c9226b231d08ec1eb0c1967cb8f41187"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_account.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.account \n\n    ),renamed as (\n      select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS Account_ID,\n        NAME AS Account_Name,\n        TYPE AS Account_Type,\n        ID AS Source_ID,\n        IS_DELETED AS Active_Flag,\n        ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\n        INDUSTRY AS INDUSTRY,\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\n        OWNER_ID AS OWNER_ID,\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n\n    select * from salesforce.account \n\n    ),renamed as (\n      select\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS Account_ID,\n        NAME AS Account_Name,\n        TYPE AS Account_Type,\n        ID AS Source_ID,\n        IS_DELETED AS Active_Flag,\n        ACCOUNT_NUMBER AS ACCOUNT_NUMBER,\n        INDUSTRY AS INDUSTRY,\n        ANNUAL_REVENUE AS ANNUAL_REVENUE,\n        OWNER_ID AS OWNER_ID,\n        'D_ACCOUNT_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n    FROM source\n    )\n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0160388946533203, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:53.870688Z", "completed_at": "2020-12-15T12:04:53.922824Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:53.923579Z", "completed_at": "2020-12-15T12:04:54.813635Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH source AS (\r\n       select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_contact_table_name') }} \r\n    ),renamed as(\r\n    SELECT\r\n        NULL AS Address_id,\r\n        concat(MAILING_STREET,'|',OTHER_STREET) AS STREET,\r\n        concat(MAILING_CITY,'|',OTHER_CITY) AS CITY,\r\n        concat(MAILING_STATE,'|',OTHER_STATE) AS STATE,\r\n        concat(MAILING_POSTAL_CODE,'|',OTHER_POSTAL_CODE) AS POSTAL_CODE,\r\n        concat(MAILING_COUNTRY,'|',OTHER_COUNTRY) AS COUNTRY,\r\n        NULL AS address_type,\r\n        'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n        source\r\n    )    \r\n    \r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_address"], "unique_id": "model.DBTTest.stg_sf_address", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_address.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_address.sql", "name": "stg_sf_address", "resource_type": "model", "alias": "stg_sf_address", "checksum": {"name": "sha256", "checksum": "7188e28aa6c8d8f645a51d79a09b9ca3e4e33b4753f0056915058f8af3567cc0"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_address.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n       select *  from salesforce.contact \n    ),renamed as(\n    SELECT\n        NULL AS Address_id,\n        concat(MAILING_STREET,'|',OTHER_STREET) AS STREET,\n        concat(MAILING_CITY,'|',OTHER_CITY) AS CITY,\n        concat(MAILING_STATE,'|',OTHER_STATE) AS STATE,\n        concat(MAILING_POSTAL_CODE,'|',OTHER_POSTAL_CODE) AS POSTAL_CODE,\n        concat(MAILING_COUNTRY,'|',OTHER_COUNTRY) AS COUNTRY,\n        NULL AS address_type,\n        'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source\n    )    \n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n       select *  from salesforce.contact \n    ),renamed as(\n    SELECT\n        NULL AS Address_id,\n        concat(MAILING_STREET,'|',OTHER_STREET) AS STREET,\n        concat(MAILING_CITY,'|',OTHER_CITY) AS CITY,\n        concat(MAILING_STATE,'|',OTHER_STATE) AS STATE,\n        concat(MAILING_POSTAL_CODE,'|',OTHER_POSTAL_CODE) AS POSTAL_CODE,\n        concat(MAILING_COUNTRY,'|',OTHER_COUNTRY) AS COUNTRY,\n        NULL AS address_type,\n        'D_ADDRESS_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source\n    )    \n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.9716000556945801, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:54.891125Z", "completed_at": "2020-12-15T12:04:54.946624Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:54.947295Z", "completed_at": "2020-12-15T12:04:55.760411Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH source AS (\r\n\r\n    select * from {{ var('salesforce_schema_name') }}.{{ var('salesforce_Campaign_table_name') }} \r\n\r\n    ),renamed as (\r\n\r\n      SELECT\r\n        NULL AS Account_ID,\r\n        {{ dbt_utils.surrogate_key('id') }} AS Campaign_ID,\r\n        NAME AS Campaign_Name,\r\n        IS_ACTIVE AS active_flag,\r\n        ID AS Source_ID,\r\n        TYPE AS TYPE,\r\n        STATUS AS STATUS,\r\n        START_DATE AS START_DATE,\r\n        END_DATE AS END_DATE,\r\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\r\n        BUDGETED_COST AS BUDGETED_COST,\r\n        ACTUAL_COST AS ACTUAL_COST,\r\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\r\n        NUMBER_SENT AS NUMBER_SENT,\r\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\r\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\r\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\r\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\r\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\r\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\r\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\r\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\r\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM\r\n        source\r\n      \r\n      )\r\n\r\n  select * from  renamed  \r\n\r\n{% endif %}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_campaign"], "unique_id": "model.DBTTest.stg_sf_campaign", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_campaign.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_campaign.sql", "name": "stg_sf_campaign", "resource_type": "model", "alias": "stg_sf_campaign", "checksum": {"name": "sha256", "checksum": "fb4aa14384aa374b0daa7323a0c4417f0004dd83c7bcbd5f1f15e4b06d503471"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_campaign.sql", "deferred": false, "compiled_sql": "\n    WITH source AS (\n\n    select * from salesforce.CAMPAIGN \n\n    ),renamed as (\n\n      SELECT\n        NULL AS Account_ID,\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS Campaign_ID,\n        NAME AS Campaign_Name,\n        IS_ACTIVE AS active_flag,\n        ID AS Source_ID,\n        TYPE AS TYPE,\n        STATUS AS STATUS,\n        START_DATE AS START_DATE,\n        END_DATE AS END_DATE,\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\n        BUDGETED_COST AS BUDGETED_COST,\n        ACTUAL_COST AS ACTUAL_COST,\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\n        NUMBER_SENT AS NUMBER_SENT,\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source\n      \n      )\n\n  select * from  renamed  \n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    WITH source AS (\n\n    select * from salesforce.CAMPAIGN \n\n    ),renamed as (\n\n      SELECT\n        NULL AS Account_ID,\n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS Campaign_ID,\n        NAME AS Campaign_Name,\n        IS_ACTIVE AS active_flag,\n        ID AS Source_ID,\n        TYPE AS TYPE,\n        STATUS AS STATUS,\n        START_DATE AS START_DATE,\n        END_DATE AS END_DATE,\n        EXPECTED_REVENUE AS EXPECTED_REVENUE,\n        BUDGETED_COST AS BUDGETED_COST,\n        ACTUAL_COST AS ACTUAL_COST,\n        EXPECTED_RESPONSE AS EXPECTED_RESPONSE,\n        NUMBER_SENT AS NUMBER_SENT,\n        NUMBER_OF_LEADS AS NUMBER_OF_LEADS,\n        NUMBER_OF_CONVERTED_LEADS AS NUMBER_OF_CONVERTED_LEADS,\n        NUMBER_OF_CONTACTS AS NUMBER_OF_CONTACTS,\n        NUMBER_OF_RESPONSES AS NUMBER_OF_RESPONSES,\n        NUMBER_OF_OPPORTUNITIES AS NUMBER_OF_OPPORTUNITIES,\n        NUMBER_OF_WON_OPPORTUNITIES AS NUMBER_OF_WON_OPPORTUNITIES,\n        AMOUNT_ALL_OPPORTUNITIES AS AMOUNT_ALL_OPPORTUNITIES,\n        AMOUNT_WON_OPPORTUNITIES AS AMOUNT_WON_OPPORTUNITIES,\n        'D_CAMPAIGN_DIM_LOAD'  AS \tDW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM\n        source\n      \n      )\n\n  select * from  renamed  \n\n"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.080312728881836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:55.871063Z", "completed_at": "2020-12-15T12:04:55.923211Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:55.923842Z", "completed_at": "2020-12-15T12:04:56.876185Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH source AS (\r\n       select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_contact_table_name') }} \r\n    ),renamed as(\r\n    SELECT \r\n        {{ dbt_utils.surrogate_key('id') }} AS contact_id, \r\n        salutation AS salutation, \r\n        NAME AS contact_name, \r\n        last_name AS last_name, \r\n        first_name AS first_name, \r\n        phone AS contact_number, \r\n        mobile_phone AS mobile_phone, \r\n        home_phone AS home_phone, \r\n        email AS contact_email, \r\n        id AS source_id, \r\n        department AS department, \r\n        lead_source AS lead_source, \r\n        NULL AS organization_id, \r\n        NULL AS employee_id, \r\n        account_id AS account_id, \r\n        NULL AS contact_age_group, \r\n        NULL AS contact_income, \r\n        NULL AS dependent, \r\n        NULL AS contact_type, \r\n        IS_DELETED AS active, \r\n        OWNER_ID AS owner_id,\r\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n     FROM \r\n       source\r\n\r\n    )    \r\n    \r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_contacts"], "unique_id": "model.DBTTest.stg_sf_contacts", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_contacts.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_contacts.sql", "name": "stg_sf_contacts", "resource_type": "model", "alias": "stg_sf_contacts", "checksum": {"name": "sha256", "checksum": "e0176e1c16457ee07c72db762fa0e4ad63a10f8a76ce221c394fad0e785d3928"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_contacts.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n       select *  from salesforce.contact \n    ),renamed as(\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS contact_id, \n        salutation AS salutation, \n        NAME AS contact_name, \n        last_name AS last_name, \n        first_name AS first_name, \n        phone AS contact_number, \n        mobile_phone AS mobile_phone, \n        home_phone AS home_phone, \n        email AS contact_email, \n        id AS source_id, \n        department AS department, \n        lead_source AS lead_source, \n        NULL AS organization_id, \n        NULL AS employee_id, \n        account_id AS account_id, \n        NULL AS contact_age_group, \n        NULL AS contact_income, \n        NULL AS dependent, \n        NULL AS contact_type, \n        IS_DELETED AS active, \n        OWNER_ID AS owner_id,\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM \n       source\n\n    )    \n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n       select *  from salesforce.contact \n    ),renamed as(\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS contact_id, \n        salutation AS salutation, \n        NAME AS contact_name, \n        last_name AS last_name, \n        first_name AS first_name, \n        phone AS contact_number, \n        mobile_phone AS mobile_phone, \n        home_phone AS home_phone, \n        email AS contact_email, \n        id AS source_id, \n        department AS department, \n        lead_source AS lead_source, \n        NULL AS organization_id, \n        NULL AS employee_id, \n        account_id AS account_id, \n        NULL AS contact_age_group, \n        NULL AS contact_income, \n        NULL AS dependent, \n        NULL AS contact_type, \n        IS_DELETED AS active, \n        OWNER_ID AS owner_id,\n        'D_CONTACT_DIM_LOAD' AS dw_session_nm, \n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n     FROM \n       source\n\n    )    \n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 0.9651801586151123, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:56.955268Z", "completed_at": "2020-12-15T12:04:57.012731Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:57.013386Z", "completed_at": "2020-12-15T12:04:57.822577Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "With user AS(\r\n    select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_user_table_name') }}\r\n),usr_role AS(\r\n    select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_user_role_table_name') }}\r\n),renamed AS(\r\n SELECT\r\n   {{ dbt_utils.surrogate_key('user.id') }} AS employee_id,\r\n   ACCOUNT_ID AS emp_account_id,\r\n   COMPANY_NAME AS org_name,\r\n   EMPLOYEE_NUMBER AS employee_code,\r\n   FIRST_NAME AS first_name,\r\n   NULL AS middle_name,\r\n   LAST_NAME AS last_name,\r\n   user.NAME AS emp_full_nm,\r\n   USER_ROLE_ID AS emp_role_nm,\r\n   usr_role. NAME AS emp_position_level,\r\n   CASE WHEN TITLE='Mr.' THEN 'male' WHEN TITLE='Ms.' THEN 'female' ELSE NULL END  AS emp_gender,\r\n   PHONE AS emp_phone_number,\r\n   EMAIL AS emp_email,\r\n   NULL AS sales_branch_id,\r\n   NULL AS sales_branch_name,\r\n   NULL AS sales_region_id,\r\n   NULL AS sales_region_name,\r\n   NULL AS sales_zone_id,\r\n   NULL AS sales_zone_name,\r\n   NULL AS business_unit_id,\r\n   DEPARTMENT AS business_unit_name,\r\n   CREATED_DATE AS emp_create_dt,\r\n   CREATED_BY_ID AS emp_last_update_dt,\r\n   MANAGER_ID AS mngr_emp_id,\r\n   usr_role.ROLLUP_DESCRIPTION AS mngr_position_level,\r\n   NULL AS emp_financial_year_start,\r\n   NULL AS emp_start_of_week,\r\n   NULL AS Weekly_working_days,\r\n   IS_ACTIVE AS  emp_active,\r\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\r\n   {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n  FROM\r\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.ID\r\n)\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_employee"], "unique_id": "model.DBTTest.stg_sf_employee", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_employee.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_employee.sql", "name": "stg_sf_employee", "resource_type": "model", "alias": "stg_sf_employee", "checksum": {"name": "sha256", "checksum": "def8de1cd8a06e48cd8c45f097ac7be84c3285d8e9211c427878ab83ea5ce6a3"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_employee.sql", "deferred": false, "compiled_sql": "With user AS(\n    select *  from salesforce.user\n),usr_role AS(\n    select *  from salesforce.user_role\n),renamed AS(\n SELECT\n   md5(cast(\n    \n    coalesce(cast(user.id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS employee_id,\n   ACCOUNT_ID AS emp_account_id,\n   COMPANY_NAME AS org_name,\n   EMPLOYEE_NUMBER AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   user.NAME AS emp_full_nm,\n   USER_ROLE_ID AS emp_role_nm,\n   usr_role. NAME AS emp_position_level,\n   CASE WHEN TITLE='Mr.' THEN 'male' WHEN TITLE='Ms.' THEN 'female' ELSE NULL END  AS emp_gender,\n   PHONE AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   DEPARTMENT AS business_unit_name,\n   CREATED_DATE AS emp_create_dt,\n   CREATED_BY_ID AS emp_last_update_dt,\n   MANAGER_ID AS mngr_emp_id,\n   usr_role.ROLLUP_DESCRIPTION AS mngr_position_level,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.ID\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "With user AS(\n    select *  from salesforce.user\n),usr_role AS(\n    select *  from salesforce.user_role\n),renamed AS(\n SELECT\n   md5(cast(\n    \n    coalesce(cast(user.id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS employee_id,\n   ACCOUNT_ID AS emp_account_id,\n   COMPANY_NAME AS org_name,\n   EMPLOYEE_NUMBER AS employee_code,\n   FIRST_NAME AS first_name,\n   NULL AS middle_name,\n   LAST_NAME AS last_name,\n   user.NAME AS emp_full_nm,\n   USER_ROLE_ID AS emp_role_nm,\n   usr_role. NAME AS emp_position_level,\n   CASE WHEN TITLE='Mr.' THEN 'male' WHEN TITLE='Ms.' THEN 'female' ELSE NULL END  AS emp_gender,\n   PHONE AS emp_phone_number,\n   EMAIL AS emp_email,\n   NULL AS sales_branch_id,\n   NULL AS sales_branch_name,\n   NULL AS sales_region_id,\n   NULL AS sales_region_name,\n   NULL AS sales_zone_id,\n   NULL AS sales_zone_name,\n   NULL AS business_unit_id,\n   DEPARTMENT AS business_unit_name,\n   CREATED_DATE AS emp_create_dt,\n   CREATED_BY_ID AS emp_last_update_dt,\n   MANAGER_ID AS mngr_emp_id,\n   usr_role.ROLLUP_DESCRIPTION AS mngr_position_level,\n   NULL AS emp_financial_year_start,\n   NULL AS emp_start_of_week,\n   NULL AS Weekly_working_days,\n   IS_ACTIVE AS  emp_active,\n   'D_EMPLOYEE_DIM_LOAD' AS DW_SESSION_NM,\n   \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n  FROM\n      user left join usr_role  on user.USER_ROLE_ID = usr_role.ID\n)\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.900770664215088, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:57.925304Z", "completed_at": "2020-12-15T12:04:58.076635Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:58.077363Z", "completed_at": "2020-12-15T12:04:59.000035Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH lead AS (\r\n       select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_lead_table_name') }} \r\n    ),opportunity as(\r\n        select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_opportunity_table_name') }} \r\n    ),renamed as(\r\n    SELECT\r\n        {{ dbt_utils.surrogate_key('lead.id') }} AS lead_id,\r\n        NULL AS account_id,\r\n        lead.LEAD_SOURCE AS lead_name,\r\n        lead.ID AS source_id,\r\n        concat(COALESCE(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country)) AS lead_contact_address,\r\n        lead.STATUS AS STATUS,\r\n        opportunity.CREATED_DATE AS opp_stage_start_dt,\r\n        opportunity.CLOSE_DATE AS opp_stage_end_dt,\r\n        NULL AS opp_stage_id,\r\n        opportunity.STAGE_NAME AS opp_stage_name,\r\n        NULL AS product_id,\r\n        NULL AS campaign_id,\r\n        NULL AS lead_to_opp_flag,\r\n        lead.IS_CONVERTED AS lead_lost_flag,\r\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\r\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\r\n        NULL AS lead_lost_dt,\r\n        NULL AS lead_lost_reason,\r\n        lead.INDUSTRY AS Industry,\r\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n        FROM\r\n          lead left join opportunity on lead.owner_id = opportunity.owner_id \r\n    )    \r\n    \r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_lead"], "unique_id": "model.DBTTest.stg_sf_lead", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_lead.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_lead.sql", "name": "stg_sf_lead", "resource_type": "model", "alias": "stg_sf_lead", "checksum": {"name": "sha256", "checksum": "94073d34e802ba7e917943d1a3cf912a7e1e86e8f667ba74eac298781d981718"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"lead_id": {"name": "lead_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_lead.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH lead AS (\n       select *  from salesforce.lead \n    ),opportunity as(\n        select *  from salesforce.opportunity \n    ),renamed as(\n    SELECT\n        md5(cast(\n    \n    coalesce(cast(lead.id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS lead_id,\n        NULL AS account_id,\n        lead.LEAD_SOURCE AS lead_name,\n        lead.ID AS source_id,\n        concat(COALESCE(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country)) AS lead_contact_address,\n        lead.STATUS AS STATUS,\n        opportunity.CREATED_DATE AS opp_stage_start_dt,\n        opportunity.CLOSE_DATE AS opp_stage_end_dt,\n        NULL AS opp_stage_id,\n        opportunity.STAGE_NAME AS opp_stage_name,\n        NULL AS product_id,\n        NULL AS campaign_id,\n        NULL AS lead_to_opp_flag,\n        lead.IS_CONVERTED AS lead_lost_flag,\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\n        NULL AS lead_lost_dt,\n        NULL AS lead_lost_reason,\n        lead.INDUSTRY AS Industry,\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          lead left join opportunity on lead.owner_id = opportunity.owner_id \n    )    \n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH lead AS (\n       select *  from salesforce.lead \n    ),opportunity as(\n        select *  from salesforce.opportunity \n    ),renamed as(\n    SELECT\n        md5(cast(\n    \n    coalesce(cast(lead.id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS lead_id,\n        NULL AS account_id,\n        lead.LEAD_SOURCE AS lead_name,\n        lead.ID AS source_id,\n        concat(COALESCE(lead.street,' ',lead.city,' ',lead.state,' ',lead.postal_code,' ',lead.country)) AS lead_contact_address,\n        lead.STATUS AS STATUS,\n        opportunity.CREATED_DATE AS opp_stage_start_dt,\n        opportunity.CLOSE_DATE AS opp_stage_end_dt,\n        NULL AS opp_stage_id,\n        opportunity.STAGE_NAME AS opp_stage_name,\n        NULL AS product_id,\n        NULL AS campaign_id,\n        NULL AS lead_to_opp_flag,\n        lead.IS_CONVERTED AS lead_lost_flag,\n        lead.CONVERTED_DATE AS lead_CONVERTED_DATE,\n        lead.CONVERTED_OPPORTUNITY_ID AS CONVERTED_OPPORTUNITY_ID,\n        NULL AS lead_lost_dt,\n        NULL AS lead_lost_reason,\n        lead.INDUSTRY AS Industry,\n        'D_LEAD_DIM_LOAD' AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n        FROM\n          lead left join opportunity on lead.owner_id = opportunity.owner_id \n    )    \n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.153048038482666, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:04:59.838374Z", "completed_at": "2020-12-15T12:04:59.912137Z"}, {"name": "execute", "started_at": "2020-12-15T12:04:59.912767Z", "completed_at": "2020-12-15T12:05:00.913955Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH OPPORTUNITY AS (\r\n       select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_opportunity_table_name') }} \r\n    ),contact AS(\r\n        select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_contact_table_name') }}    \r\n    ),OPPORTUNITY_LINE_ITEM AS(\r\n        select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_opportunity_line_item_table_name') }}    \r\n    \r\n    ),OPPORTUNITY_STAGE AS(\r\n        select *  from {{ var('salesforce_schema_name') }}.{{ var('salesforce_oppo_stage_table_name') }}    \r\n    )\r\n    ,renamed as(\r\n    SELECT\r\n        {{ dbt_utils.surrogate_key('OPPORTUNITY.id') }} AS opp_id,\r\n        OPPORTUNITY.NAME AS opp_name,\r\n        OPPORTUNITY.TYPE AS Type,\r\n        OPPORTUNITY.ACCOUNT_ID AS opp_account_id,\r\n        NULL AS opp_employee_id,\r\n        OPPORTUNITY.ID AS Source_id,\r\n        OPPORTUNITY.AMOUNT AS opp_amount,\r\n        NULL AS opp_amount_without_disc,\r\n        NULL AS opp_expectd_Clouser_Dt,\r\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\r\n        contact.NAME AS opp_contact_name,\r\n        contact.PHONE AS opp_contact_number,\r\n        contact.EMAIL AS opp_contact_email,\r\n        contact.MAILING_STREET AS opp_contact_address,\r\n        OPPORTUNITY.CREATED_DATE AS opp_initial_create_dt,\r\n        OPPORTUNITY.LAST_MODIFIED_DATE AS opp_last_updated_dt,\r\n        NULL AS opp_prospect_Dt,\r\n        NULL AS opp_stage_calc_id,\r\n        OPPORTUNITY_STAGE.CREATED_DATE AS opp_stage_start_dt,\r\n        OPPORTUNITY.CLOSE_DATE AS opp_stage_end_dt,\r\n        OPPORTUNITY_STAGE.id AS opp_stage_id,\r\n        OPPORTUNITY_STAGE.MASTER_LABEL AS opp_stage_name,\r\n        NULL AS lead_lost_reason,\r\n        OPPORTUNITY.CAMPAIGN_ID AS campaign_id,\r\n        NULL AS opp_competitor,\r\n        NULL AS opp_on_hold_flag,\r\n        OPPORTUNITY_LINE_ITEM. PRODUCT_2_ID AS opp_product_id,\r\n        OPPORTUNITY_LINE_ITEM. PRODUCT_CODE AS opp_product_name,\r\n        NULL AS opp_sub_product_id,\r\n        NULL AS opp_sub_product_name,\r\n        OPPORTUNITY_LINE_ITEM. TOTAL_PRICE AS opp_product_amount,\r\n        NULL AS opp_prd_amount_without_disc,\r\n        NULL AS opp_prd_discount,\r\n        OPPORTUNITY. STAGE_NAME AS opp_source_name,\r\n        OPPORTUNITY. IS_DELETED AS opp_active,\r\n        OPPORTUNITY. OWNER_ID AS OWNER_ID,\r\n        NULL AS DW_CURR_FLG,\r\n        NULL AS EFFCT_START_DATE,\r\n        NULL AS EFFCT_END_DATE,\r\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\r\n        {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n      FROM\r\n        OPPORTUNITY \r\n        left join contact on OPPORTUNITY.Owner_id  =  contact.Owner_id\r\n        left join OPPORTUNITY_LINE_ITEM on OPPORTUNITY.ID = OPPORTUNITY_LINE_ITEM.OPPORTUNITY_ID\r\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL\r\n\r\n    )    \r\n    \r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_opportunity"], "unique_id": "model.DBTTest.stg_sf_opportunity", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_opportunity.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_opportunity.sql", "name": "stg_sf_opportunity", "resource_type": "model", "alias": "stg_sf_opportunity", "checksum": {"name": "sha256", "checksum": "ae920bfa2b543d992af7e84a58ef1a99857ab7410d73bf8eb9b104c48c566b3b"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {"opportunity_id": {"name": "opportunity_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/sources/stg_salesforce/schema.yml", "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_opportunity.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH OPPORTUNITY AS (\n       select *  from salesforce.opportunity \n    ),contact AS(\n        select *  from salesforce.contact    \n    ),OPPORTUNITY_LINE_ITEM AS(\n        select *  from salesforce.OPPORTUNITY_LINE_ITEM    \n    \n    ),OPPORTUNITY_STAGE AS(\n        select *  from salesforce.OPPORTUNITY_STAGE    \n    )\n    ,renamed as(\n    SELECT\n        md5(cast(\n    \n    coalesce(cast(OPPORTUNITY.id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS opp_id,\n        OPPORTUNITY.NAME AS opp_name,\n        OPPORTUNITY.TYPE AS Type,\n        OPPORTUNITY.ACCOUNT_ID AS opp_account_id,\n        NULL AS opp_employee_id,\n        OPPORTUNITY.ID AS Source_id,\n        OPPORTUNITY.AMOUNT AS opp_amount,\n        NULL AS opp_amount_without_disc,\n        NULL AS opp_expectd_Clouser_Dt,\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\n        contact.NAME AS opp_contact_name,\n        contact.PHONE AS opp_contact_number,\n        contact.EMAIL AS opp_contact_email,\n        contact.MAILING_STREET AS opp_contact_address,\n        OPPORTUNITY.CREATED_DATE AS opp_initial_create_dt,\n        OPPORTUNITY.LAST_MODIFIED_DATE AS opp_last_updated_dt,\n        NULL AS opp_prospect_Dt,\n        NULL AS opp_stage_calc_id,\n        OPPORTUNITY_STAGE.CREATED_DATE AS opp_stage_start_dt,\n        OPPORTUNITY.CLOSE_DATE AS opp_stage_end_dt,\n        OPPORTUNITY_STAGE.id AS opp_stage_id,\n        OPPORTUNITY_STAGE.MASTER_LABEL AS opp_stage_name,\n        NULL AS lead_lost_reason,\n        OPPORTUNITY.CAMPAIGN_ID AS campaign_id,\n        NULL AS opp_competitor,\n        NULL AS opp_on_hold_flag,\n        OPPORTUNITY_LINE_ITEM. PRODUCT_2_ID AS opp_product_id,\n        OPPORTUNITY_LINE_ITEM. PRODUCT_CODE AS opp_product_name,\n        NULL AS opp_sub_product_id,\n        NULL AS opp_sub_product_name,\n        OPPORTUNITY_LINE_ITEM. TOTAL_PRICE AS opp_product_amount,\n        NULL AS opp_prd_amount_without_disc,\n        NULL AS opp_prd_discount,\n        OPPORTUNITY. STAGE_NAME AS opp_source_name,\n        OPPORTUNITY. IS_DELETED AS opp_active,\n        OPPORTUNITY. OWNER_ID AS OWNER_ID,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n      FROM\n        OPPORTUNITY \n        left join contact on OPPORTUNITY.Owner_id  =  contact.Owner_id\n        left join OPPORTUNITY_LINE_ITEM on OPPORTUNITY.ID = OPPORTUNITY_LINE_ITEM.OPPORTUNITY_ID\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL\n\n    )    \n    \n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH OPPORTUNITY AS (\n       select *  from salesforce.opportunity \n    ),contact AS(\n        select *  from salesforce.contact    \n    ),OPPORTUNITY_LINE_ITEM AS(\n        select *  from salesforce.OPPORTUNITY_LINE_ITEM    \n    \n    ),OPPORTUNITY_STAGE AS(\n        select *  from salesforce.OPPORTUNITY_STAGE    \n    )\n    ,renamed as(\n    SELECT\n        md5(cast(\n    \n    coalesce(cast(OPPORTUNITY.id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS opp_id,\n        OPPORTUNITY.NAME AS opp_name,\n        OPPORTUNITY.TYPE AS Type,\n        OPPORTUNITY.ACCOUNT_ID AS opp_account_id,\n        NULL AS opp_employee_id,\n        OPPORTUNITY.ID AS Source_id,\n        OPPORTUNITY.AMOUNT AS opp_amount,\n        NULL AS opp_amount_without_disc,\n        NULL AS opp_expectd_Clouser_Dt,\n        OPPORTUNITY.CONTACT_ID AS Contact_id,\n        contact.NAME AS opp_contact_name,\n        contact.PHONE AS opp_contact_number,\n        contact.EMAIL AS opp_contact_email,\n        contact.MAILING_STREET AS opp_contact_address,\n        OPPORTUNITY.CREATED_DATE AS opp_initial_create_dt,\n        OPPORTUNITY.LAST_MODIFIED_DATE AS opp_last_updated_dt,\n        NULL AS opp_prospect_Dt,\n        NULL AS opp_stage_calc_id,\n        OPPORTUNITY_STAGE.CREATED_DATE AS opp_stage_start_dt,\n        OPPORTUNITY.CLOSE_DATE AS opp_stage_end_dt,\n        OPPORTUNITY_STAGE.id AS opp_stage_id,\n        OPPORTUNITY_STAGE.MASTER_LABEL AS opp_stage_name,\n        NULL AS lead_lost_reason,\n        OPPORTUNITY.CAMPAIGN_ID AS campaign_id,\n        NULL AS opp_competitor,\n        NULL AS opp_on_hold_flag,\n        OPPORTUNITY_LINE_ITEM. PRODUCT_2_ID AS opp_product_id,\n        OPPORTUNITY_LINE_ITEM. PRODUCT_CODE AS opp_product_name,\n        NULL AS opp_sub_product_id,\n        NULL AS opp_sub_product_name,\n        OPPORTUNITY_LINE_ITEM. TOTAL_PRICE AS opp_product_amount,\n        NULL AS opp_prd_amount_without_disc,\n        NULL AS opp_prd_discount,\n        OPPORTUNITY. STAGE_NAME AS opp_source_name,\n        OPPORTUNITY. IS_DELETED AS opp_active,\n        OPPORTUNITY. OWNER_ID AS OWNER_ID,\n        NULL AS DW_CURR_FLG,\n        NULL AS EFFCT_START_DATE,\n        NULL AS EFFCT_END_DATE,\n        'D_OPPORTUNITY_DIM_LOAD'  AS DW_SESSION_NM,\n        \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n      FROM\n        OPPORTUNITY \n        left join contact on OPPORTUNITY.Owner_id  =  contact.Owner_id\n        left join OPPORTUNITY_LINE_ITEM on OPPORTUNITY.ID = OPPORTUNITY_LINE_ITEM.OPPORTUNITY_ID\n        left join OPPORTUNITY_STAGE on OPPORTUNITY.stage_name = OPPORTUNITY_STAGE.MASTER_LABEL\n\n    )    \n    \n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.1884880065917969, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:01.006189Z", "completed_at": "2020-12-15T12:05:01.073316Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:01.073971Z", "completed_at": "2020-12-15T12:05:02.115092Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if not var(\"enable_salesforce_source\") %}\r\n{{\r\n    config(\r\n        enabled=false\r\n    )\r\n}}\r\n{% endif %}\r\n\r\n{% if var(\"salesforce_crm_etl_name\") == 'fivetran' %}\r\n    WITH source AS (\r\n        SELECT * from {{ var('salesforce_schema_name') }}.{{ var('salesforce_product_table_name') }} \r\n    ),renamed as(\r\n        SELECT\r\n            NULL AS account_id,\r\n            {{ dbt_utils.surrogate_key('id') }} AS product_id,\r\n            ID AS Source_id,\r\n            PRODUCT_CODE AS product_code,\r\n            NAME AS product_name,\r\n            IS_ACTIVE AS active_flag,\r\n            QUANTITY_UNIT_OF_MEASURE AS Quantity_UOM,\r\n            'D_PRODUCT_DIM_LOAD'  AS DW_SESSION_NM,\r\n            {{ dbt_utils.current_timestamp() }} AS DW_INS_UPD_DTS \r\n         FROM\r\n            source \r\n     \r\n    )    \r\n    \r\n\r\n{% endif %}\r\n\r\nselect * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "stg_sf_product"], "unique_id": "model.DBTTest.stg_sf_product", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/stg_sf_product.sql", "original_file_path": "models/sources/stg_salesforce/stg_sf_product.sql", "name": "stg_sf_product", "resource_type": "model", "alias": "stg_sf_product", "checksum": {"name": "sha256", "checksum": "27a53078735918ac500411848b5107c85dc33be378e81c57dae10247dfd3ca94"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt_utils.current_timestamp", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/stg_sf_product.sql", "deferred": false, "compiled_sql": "\n\n\n    WITH source AS (\n        SELECT * from salesforce.product_2 \n    ),renamed as(\n        SELECT\n            NULL AS account_id,\n            md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS product_id,\n            ID AS Source_id,\n            PRODUCT_CODE AS product_code,\n            NAME AS product_name,\n            IS_ACTIVE AS active_flag,\n            QUANTITY_UNIT_OF_MEASURE AS Quantity_UOM,\n            'D_PRODUCT_DIM_LOAD'  AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n         FROM\n            source \n     \n    )    \n    \n\n\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n    WITH source AS (\n        SELECT * from salesforce.product_2 \n    ),renamed as(\n        SELECT\n            NULL AS account_id,\n            md5(cast(\n    \n    coalesce(cast(id as \n    varchar\n), '')\n\n as \n    varchar\n)) AS product_id,\n            ID AS Source_id,\n            PRODUCT_CODE AS product_code,\n            NAME AS product_name,\n            IS_ACTIVE AS active_flag,\n            QUANTITY_UNIT_OF_MEASURE AS Quantity_UOM,\n            'D_PRODUCT_DIM_LOAD'  AS DW_SESSION_NM,\n            \n    current_timestamp::\n    timestamp_ntz\n\n AS DW_INS_UPD_DTS \n         FROM\n            source \n     \n    )    \n    \n\n\n\nselect * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.1961865425109863, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:02.205042Z", "completed_at": "2020-12-15T12:05:02.251612Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:02.252255Z", "completed_at": "2020-12-15T12:05:03.316119Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH source AS (\r\n\r\n    select * from {{ var('salesforce_schema_name') }}.{{ var('salesforce_account_table_name') }} \r\n\r\n    ),renamed as (\r\n      select \r\n      {{ convert_Varchar765('name') }} AS name ,\r\n      {{ convert_boolean('IS_DELETED') }} AS is_dele,\r\n      {{ convert_Number18('ANNUAL_REVENUE') }} AS reven\r\n      \r\n      \r\n      from source\r\n\r\n      \r\n    ) \r\n\r\n select * from renamed", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_staging", "fqn": ["DBTTest", "sources", "stg_salesforce", "test"], "unique_id": "model.DBTTest.test", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "sources/stg_salesforce/test.sql", "original_file_path": "models/sources/stg_salesforce/test.sql", "name": "test", "resource_type": "model", "alias": "test", "checksum": {"name": "sha256", "checksum": "ca454c4d0c9aea92f265e8a99fdba5b5b8e6657af688372511e7302f655b57d3"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "staging", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.DBTTest.convert_Varchar765", "macro.DBTTest.convert_boolean", "macro.DBTTest.convert_Number18", "macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/sources/stg_salesforce/test.sql", "deferred": false, "compiled_sql": "WITH source AS (\n\n    select * from salesforce.account \n\n    ),renamed as (\n      select \n      \n    cast(name as Varchar(765))\n AS name ,\n      \n    cast(IS_DELETED as BOOLEAN)\n AS is_dele,\n      \n    cast(ANNUAL_REVENUE as Number(18,0))\n AS reven\n      \n      \n      from source\n\n      \n    ) \n\n select * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH source AS (\n\n    select * from salesforce.account \n\n    ),renamed as (\n      select \n      \n    cast(name as Varchar(765))\n AS name ,\n      \n    cast(IS_DELETED as BOOLEAN)\n AS is_dele,\n      \n    cast(ANNUAL_REVENUE as Number(18,0))\n AS reven\n      \n      \n      from source\n\n      \n    ) \n\n select * from renamed"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.0278089046478271, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:03.413496Z", "completed_at": "2020-12-15T12:05:03.463217Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:03.463872Z", "completed_at": "2020-12-15T12:05:04.340363Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_OpportunityStages') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_oppo_stages"], "unique_id": "model.DBTTest.dim_oppo_stages", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_oppo_stages.sql", "original_file_path": "models/marts/w_crm/dim_oppo_stages.sql", "name": "dim_oppo_stages", "resource_type": "model", "alias": "dim_oppo_stages", "checksum": {"name": "sha256", "checksum": "31bb25f985a54bc8df468d24c3cd32c4c9637a04a27c89a90493f40b3c86769e"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_OpportunityStages"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_OpportunityStages"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_oppo_stages.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_OpportunityStages", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_OpportunityStages"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.8939199447631836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:04.458285Z", "completed_at": "2020-12-15T12:05:04.495876Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:04.496523Z", "completed_at": "2020-12-15T12:05:06.265376Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_account') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_account"], "unique_id": "model.DBTTest.dim_account", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_account.sql", "original_file_path": "models/marts/w_crm/dim_account.sql", "name": "dim_account", "resource_type": "model", "alias": "dim_account", "checksum": {"name": "sha256", "checksum": "2db1bf82403ad78a56ee7e5ca9e318d9f6e4a3143a007e941bea8234b7f6a597"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_account.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_account", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_account"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.0166304111480713, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:06.350738Z", "completed_at": "2020-12-15T12:05:06.388516Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:06.389178Z", "completed_at": "2020-12-15T12:05:08.288774Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_address') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_address"], "unique_id": "model.DBTTest.dim_address", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_address.sql", "original_file_path": "models/marts/w_crm/dim_address.sql", "name": "dim_address", "resource_type": "model", "alias": "dim_address", "checksum": {"name": "sha256", "checksum": "3312acd7e69c08fe912686a3b138f74bb9d7f2e18aa504c85df9bbaeb7c5e284"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_address"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_address.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_address", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_address"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.6195685863494873, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:08.379641Z", "completed_at": "2020-12-15T12:05:08.424727Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:08.425357Z", "completed_at": "2020-12-15T12:05:09.905670Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_campaign') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_Campaign"], "unique_id": "model.DBTTest.dim_Campaign", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_Campaign.sql", "original_file_path": "models/marts/w_crm/dim_Campaign.sql", "name": "dim_Campaign", "resource_type": "model", "alias": "dim_Campaign", "checksum": {"name": "sha256", "checksum": "bb0ae2bf3e658354a7de5ec83e68092238f635fc4c97944820429f7faca9431e"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_campaign"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_campaign"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_Campaign.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_campaign", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_campaign"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.7278470993041992, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:10.005389Z", "completed_at": "2020-12-15T12:05:10.076768Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:10.077405Z", "completed_at": "2020-12-15T12:05:11.640315Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_contacts') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_contact"], "unique_id": "model.DBTTest.dim_contact", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_contact.sql", "original_file_path": "models/marts/w_crm/dim_contact.sql", "name": "dim_contact", "resource_type": "model", "alias": "dim_contact", "checksum": {"name": "sha256", "checksum": "484694d2afafe3ddbe36c17f312b9845be90b73b72966032010769d724620834"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_contacts"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_contacts"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_contact.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_contacts", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_contacts"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.5148489475250244, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:11.757840Z", "completed_at": "2020-12-15T12:05:11.798538Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:11.799216Z", "completed_at": "2020-12-15T12:05:13.182276Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_employee') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_employee"], "unique_id": "model.DBTTest.dim_employee", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_employee.sql", "original_file_path": "models/marts/w_crm/dim_employee.sql", "name": "dim_employee", "resource_type": "model", "alias": "dim_employee", "checksum": {"name": "sha256", "checksum": "0aebbedeae20b79da00fd3b7757671f7202b79c17bc93cacf88b4a606b2fb17a"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_employee"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_employee"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_employee.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_employee", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_employee"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.979276418685913, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:13.279809Z", "completed_at": "2020-12-15T12:05:13.318020Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:13.318710Z", "completed_at": "2020-12-15T12:05:15.167284Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_lead') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_lead"], "unique_id": "model.DBTTest.dim_lead", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_lead.sql", "original_file_path": "models/marts/w_crm/dim_lead.sql", "name": "dim_lead", "resource_type": "model", "alias": "dim_lead", "checksum": {"name": "sha256", "checksum": "d55bfcf958e7ee32a0a1462b0a118157819a71b1fd06ed2d5570338fe008cca6"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_lead"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_lead"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_lead.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_lead", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_lead"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.9847073554992676, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:15.263238Z", "completed_at": "2020-12-15T12:05:15.315838Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:15.316460Z", "completed_at": "2020-12-15T12:05:17.160336Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_opportunity') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_opportunity"], "unique_id": "model.DBTTest.dim_opportunity", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_opportunity.sql", "original_file_path": "models/marts/w_crm/dim_opportunity.sql", "name": "dim_opportunity", "resource_type": "model", "alias": "dim_opportunity", "checksum": {"name": "sha256", "checksum": "effb02580280ba3e48802d25f3163bad633776758231ab8fa2f9f89367b0bb41"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_opportunity"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_opportunity"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_opportunity.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_opportunity", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_opportunity"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.028844118118286, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:17.259396Z", "completed_at": "2020-12-15T12:05:17.331828Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:17.332446Z", "completed_at": "2020-12-15T12:05:19.202187Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT * FROM {{ ref('stg_sf_product') }}", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_marts", "fqn": ["DBTTest", "marts", "w_crm", "dim_product"], "unique_id": "model.DBTTest.dim_product", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "marts/w_crm/dim_product.sql", "original_file_path": "models/marts/w_crm/dim_product.sql", "name": "dim_product", "resource_type": "model", "alias": "dim_product", "checksum": {"name": "sha256", "checksum": "36318dab839fc68ad45bf14184fc791b7363c1ae53883884f022b334328140e3"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "marts", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_sf_product"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.DBTTest.stg_sf_product"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/marts/w_crm/dim_product.sql", "deferred": false, "compiled_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_product", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT * FROM DATAFLOTEST_DATABASE.dbt_test_staging.stg_sf_product"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.6627767086029053, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-15T12:05:19.293071Z", "completed_at": "2020-12-15T12:05:19.336085Z"}, {"name": "execute", "started_at": "2020-12-15T12:05:19.336797Z", "completed_at": "2020-12-15T12:05:20.879846Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-12-15T12:05:21.790758Z", "elapsed_time": 35.497488498687744}