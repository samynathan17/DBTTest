{"logs": [], "results": [{"node": {"raw_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_ads AS(\n            --==================== 1.LI_ADS ====================================================================\n      select\n           \n            Sum(cost_in_local_currency) as r_value,\n            172 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n\n      union\n        select\n           \n            coalesce(sum(clicks), 0)  as r_value,\n            173 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            coalesce(Sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            coalesce(Sum(clicks)/ Sum(impressions), 0)  as r_value,\n            177 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            Sum(cost_in_local_currency)/ NULLIF(Sum(clicks),0)  as r_value,\n            179 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      ---========================== 2.GA ADS ===========================================\n\n      union\n        select\n           \n            coalesce(sum(cost), 0)  as r_value,\n            172 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      union\n        select\n            coalesce(Sum(clicks), 0)  as r_value,\n            173 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(Sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(Sum(clicks)/ Sum(impressions), 0)  as r_value,\n            177 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(sum(cost)/ Sum(clicks), 0)  as r_value,\n            179 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      \n       -- =============== 3. FB_ADS ===========================================================   \n\n       union\n        select\n           \n            coalesce(sum(spend), 0)  as r_value,\n            172 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n         union\n        select\n           \n            coalesce(sum(INLINE_LINK_CLICKS), 0)  as r_value,\n            173 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6  \n\n      union\n        select\n           \n            coalesce(sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6     \n\n       union\n        select\n           \n            coalesce(sum(CTR), 0)  as r_value,\n            177 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n       union\n        select\n           \n            coalesce(sum(CPC), 0)  as r_value,\n            179 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n       union\n        select\n           \n            coalesce(sum(CPM), 0)  as r_value,\n            188 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6    \n\n        union\n        select\n           \n            coalesce(sum(REACH), 0)  as r_value,\n            189 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6            \n      \n       union\n        select\n           \n            coalesce(sum(FREQUENCY), 0)  as r_value,\n            190 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6            \n\n) \n\nselect distinct r_source_type from r_ads --where 1=1\n--and r_metric_id=172 \n--and r_source_type='FB_ADS_DRGRILL_30032021'", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_UAT_Testing", "fqn": ["DBTTest", "UAT_Testing", "ADS_FACT"], "unique_id": "model.DBTTest.ADS_FACT", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "UAT_Testing/ADS_FACT.sql", "original_file_path": "models/UAT_Testing/ADS_FACT.sql", "name": "ADS_FACT", "resource_type": "model", "alias": "ADS_FACT", "checksum": {"name": "sha256", "checksum": "c618c351b61a15088eac2c75def81f1a725f39533e537a2fe9fb0fb7e1cda0e1"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "UAT_Testing", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/UAT_Testing/ADS_FACT.sql", "deferred": false, "compiled_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_ads AS(\n            --==================== 1.LI_ADS ====================================================================\n      select\n           \n            Sum(cost_in_local_currency) as r_value,\n            172 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n\n      union\n        select\n           \n            coalesce(sum(clicks), 0)  as r_value,\n            173 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            coalesce(Sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            coalesce(Sum(clicks)/ Sum(impressions), 0)  as r_value,\n            177 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            Sum(cost_in_local_currency)/ NULLIF(Sum(clicks),0)  as r_value,\n            179 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      ---========================== 2.GA ADS ===========================================\n\n      union\n        select\n           \n            coalesce(sum(cost), 0)  as r_value,\n            172 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      union\n        select\n            coalesce(Sum(clicks), 0)  as r_value,\n            173 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(Sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(Sum(clicks)/ Sum(impressions), 0)  as r_value,\n            177 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(sum(cost)/ Sum(clicks), 0)  as r_value,\n            179 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      \n       -- =============== 3. FB_ADS ===========================================================   \n\n       union\n        select\n           \n            coalesce(sum(spend), 0)  as r_value,\n            172 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n         union\n        select\n           \n            coalesce(sum(INLINE_LINK_CLICKS), 0)  as r_value,\n            173 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6  \n\n      union\n        select\n           \n            coalesce(sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6     \n\n       union\n        select\n           \n            coalesce(sum(CTR), 0)  as r_value,\n            177 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n       union\n        select\n           \n            coalesce(sum(CPC), 0)  as r_value,\n            179 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n       union\n        select\n           \n            coalesce(sum(CPM), 0)  as r_value,\n            188 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6    \n\n        union\n        select\n           \n            coalesce(sum(REACH), 0)  as r_value,\n            189 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6            \n      \n       union\n        select\n           \n            coalesce(sum(FREQUENCY), 0)  as r_value,\n            190 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6            \n\n) \n\nselect distinct r_source_type from r_ads --where 1=1\n--and r_metric_id=172 \n--and r_source_type='FB_ADS_DRGRILL_30032021'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_ads AS(\n            --==================== 1.LI_ADS ====================================================================\n      select\n           \n            Sum(cost_in_local_currency) as r_value,\n            172 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n\n      union\n        select\n           \n            coalesce(sum(clicks), 0)  as r_value,\n            173 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            coalesce(Sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            coalesce(Sum(clicks)/ Sum(impressions), 0)  as r_value,\n            177 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6\n      union\n        select\n           \n            Sum(cost_in_local_currency)/ NULLIF(Sum(clicks),0)  as r_value,\n            179 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Ad_Analytics_By_Creative eng inner join calendar on to_date(DAY)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DAY) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      ---========================== 2.GA ADS ===========================================\n\n      union\n        select\n           \n            coalesce(sum(cost), 0)  as r_value,\n            172 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      union\n        select\n            coalesce(Sum(clicks), 0)  as r_value,\n            173 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(Sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(Sum(clicks)/ Sum(impressions), 0)  as r_value,\n            177 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n      union\n        select\n            coalesce(sum(cost)/ Sum(clicks), 0)  as r_value,\n            179 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Final_URL_Performance eng inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n      \n       -- =============== 3. FB_ADS ===========================================================   \n\n       union\n        select\n           \n            coalesce(sum(spend), 0)  as r_value,\n            172 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n         union\n        select\n           \n            coalesce(sum(INLINE_LINK_CLICKS), 0)  as r_value,\n            173 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6  \n\n      union\n        select\n           \n            coalesce(sum(impressions), 0)  as r_value,\n            175 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6     \n\n       union\n        select\n           \n            coalesce(sum(CTR), 0)  as r_value,\n            177 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n       union\n        select\n           \n            coalesce(sum(CPC), 0)  as r_value,\n            179 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n       union\n        select\n           \n            coalesce(sum(CPM), 0)  as r_value,\n            188 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6    \n\n        union\n        select\n           \n            coalesce(sum(REACH), 0)  as r_value,\n            189 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6            \n      \n       union\n        select\n           \n            coalesce(sum(FREQUENCY), 0)  as r_value,\n            190 AS r_metric_id,\n            'FB_ADS_DRGRILL_30032021' as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from FB_ADS_DRGRILL_30032021.BASIC_AD BASIC_AD inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6            \n\n) \n\nselect distinct r_source_type from r_ads --where 1=1\n--and r_metric_id=172 \n--and r_source_type='FB_ADS_DRGRILL_30032021'"}, "error": null, "status": "SUCCESS 1", "execution_time": 5.68558669090271, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-26T09:47:27.681456Z", "completed_at": "2021-05-26T09:47:27.728283Z"}, {"name": "execute", "started_at": "2021-05-26T09:47:27.728579Z", "completed_at": "2021-05-26T09:47:32.942648Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH PERIOD AS(\n     Select TYPE,start_date,end_date,\n            CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Year' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as timeframe_type from SF_RKLIVE_06012021.PERIOD\n       union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n           WHEN TYPE='Month' THEN UPPER(LTRIM(RTRIM(REPLACE(split(FULLY_QUALIFIED_LABEL,'FY ')[0],'\"', '')))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Quarter'  THEN UPPER(LTRIM(RTRIM(CAST(SUBSTRING(FULLY_QUALIFIED_LABEL, 2, 3) AS varchar(100))))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        \n),calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS (\n    --- SF  oppor_won-1\n       select \n            count(OPPORTUNITY.source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            1 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where OPPORTUNITY.IS_WON='true'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and OPPORTUNITY.Source_type=usr.Source_type\n         and to_date(OPPORTUNITY.close_date) between PERIOD.start_date and PERIOD.end_date\n         --and to_date(close_date) between '2017-01-01' and '2021-03-31'\n        group by 4,5,6,7\n\n         union   --Oppor loss -10\n        select \n            count(OPPORTUNITY.source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            10 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where OPPORTUNITY.IS_WON='false'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and OPPORTUNITY.Source_type=usr.Source_type\n         and to_date(OPPORTUNITY.close_date) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --converted_leads-3\n        select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            3 AS r_metric_id,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr  \n        where UPPER(IS_CONVERTED) = 'TRUE'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CONVERTED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n       union --new leads -4\n        select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            4 AS r_metric_id,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where --UPPER(led.IS_CONVERTED) = 'FALSE'\n         --and upper(led.status)='NEW'\n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --accounts -27\n        select \n            count(acc.source_id) as r_count,\n            0 AS r_amount,\n            27 AS r_metric_id,\n            acc.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Account acc,PERIOD,DBT_SALESDATAFLO.STG_USER  usr   \n        where 1=1\n         and timeframe_type is not null\n         and acc.owner_id=usr.source_id\n         and acc.Source_type=usr.Source_type\n         and to_date(acc.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --contact -29\n        select \n            count(contact.source_id) as r_count,\n            0 AS r_amount,\n            29 AS r_metric_id,\n            contact.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Contact contact,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr  \n        where 1=1\n         and timeframe_type is not null\n         and contact.owner_id=usr.source_id\n         and contact.Source_type=usr.Source_type\n         and to_date(contact.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n       --HS\n        union   --deal won -1 PROPERTY_HS_CREATEDATE\n        select\n           \n            count(deal.Source_DEAL_ID) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            1 AS r_metric_id,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year \n        from DBT_SALESDATAFLO.Stg_Deal deal inner join calendar on to_date(deal.PROPERTY_CLOSEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%WON%' \n         and PROPERTY_HS_IS_CLOSED='true'\n         and timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(PROPERTY_CLOSEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n       \n        union   -- Deal Los -10\n        select\n           \n            COALESCE(count(deal.Source_DEAL_ID),0) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            10 AS r_metric_id,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal  inner join calendar on to_date(PROPERTY_CLOSEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%LOS%' \n         and PROPERTY_HS_IS_CLOSED='true'\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(PROPERTY_CLOSEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n\n      union -- calls -39\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            39 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='CALL'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n\n    union -- Task completed -89\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            89 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='TASK'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7     \n\n    union -- (Marketing MEETING) -71\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            71 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='MEETING'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7      \n\n    union -- (Notes) -76\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            76 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='NOTE'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7       \n\n    union -- (Emails Logged) -66\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            66 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='EMAIL'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7            \n\n\n\n\n\n\n\n\n),fs AS(\n    select sum(count) as f_count,\n    sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    cast(tmf.year as varchar(1000)) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME tmf\n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7\n union\n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    UPPER(MONTH_NAME) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='M'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.MONTH_END\n        and MONTHEND_FLAG='TRUE'\n    group by 3,4,5,6,7\n\n  union \n  \n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,tmf.QUTR_NUMBER as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='Q'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.QUARTER_END\n        and QUARTEREND_FLAG='TRUE'\n    group by 3,4,5,6,7\n\n  union \n  \n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,tmf.WEEK_NUM as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='W'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.WEEK_END\n        and WEEKEND_FLAG='TRUE'\n    group by 3,4,5,6,7  \n   \n\n), compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    --and case when r_type='Year' then cast('Y' as varchar(100)) else null end = cast(f_timeframe_type as varchar(1000)) ='Y'\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\nselect * from compare_result  --where 1=1\n  --and R_SOURCE_TYPE ='HS_RKLIVE_01042021'\n  --and r_metric_id=4\n  --and r_type='Year'", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_UAT_Testing", "fqn": ["DBTTest", "UAT_Testing", "HS_SF_FACT"], "unique_id": "model.DBTTest.HS_SF_FACT", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "UAT_Testing/HS_SF_FACT.sql", "original_file_path": "models/UAT_Testing/HS_SF_FACT.sql", "name": "HS_SF_FACT", "resource_type": "model", "alias": "HS_SF_FACT", "checksum": {"name": "sha256", "checksum": "99107726fe8d03fd3fda0055c3140996fca4b6c78136e7bf96d947d5365bfe32"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "UAT_Testing", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/UAT_Testing/HS_SF_FACT.sql", "deferred": false, "compiled_sql": "WITH PERIOD AS(\n     Select TYPE,start_date,end_date,\n            CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Year' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as timeframe_type from SF_RKLIVE_06012021.PERIOD\n       union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n           WHEN TYPE='Month' THEN UPPER(LTRIM(RTRIM(REPLACE(split(FULLY_QUALIFIED_LABEL,'FY ')[0],'\"', '')))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Quarter'  THEN UPPER(LTRIM(RTRIM(CAST(SUBSTRING(FULLY_QUALIFIED_LABEL, 2, 3) AS varchar(100))))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        \n),calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS (\n    --- SF  oppor_won-1\n       select \n            count(OPPORTUNITY.source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            1 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where OPPORTUNITY.IS_WON='true'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and OPPORTUNITY.Source_type=usr.Source_type\n         and to_date(OPPORTUNITY.close_date) between PERIOD.start_date and PERIOD.end_date\n         --and to_date(close_date) between '2017-01-01' and '2021-03-31'\n        group by 4,5,6,7\n\n         union   --Oppor loss -10\n        select \n            count(OPPORTUNITY.source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            10 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where OPPORTUNITY.IS_WON='false'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and OPPORTUNITY.Source_type=usr.Source_type\n         and to_date(OPPORTUNITY.close_date) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --converted_leads-3\n        select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            3 AS r_metric_id,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr  \n        where UPPER(IS_CONVERTED) = 'TRUE'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CONVERTED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n       union --new leads -4\n        select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            4 AS r_metric_id,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where --UPPER(led.IS_CONVERTED) = 'FALSE'\n         --and upper(led.status)='NEW'\n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --accounts -27\n        select \n            count(acc.source_id) as r_count,\n            0 AS r_amount,\n            27 AS r_metric_id,\n            acc.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Account acc,PERIOD,DBT_SALESDATAFLO.STG_USER  usr   \n        where 1=1\n         and timeframe_type is not null\n         and acc.owner_id=usr.source_id\n         and acc.Source_type=usr.Source_type\n         and to_date(acc.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --contact -29\n        select \n            count(contact.source_id) as r_count,\n            0 AS r_amount,\n            29 AS r_metric_id,\n            contact.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Contact contact,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr  \n        where 1=1\n         and timeframe_type is not null\n         and contact.owner_id=usr.source_id\n         and contact.Source_type=usr.Source_type\n         and to_date(contact.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n       --HS\n        union   --deal won -1 PROPERTY_HS_CREATEDATE\n        select\n           \n            count(deal.Source_DEAL_ID) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            1 AS r_metric_id,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year \n        from DBT_SALESDATAFLO.Stg_Deal deal inner join calendar on to_date(deal.PROPERTY_CLOSEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%WON%' \n         and PROPERTY_HS_IS_CLOSED='true'\n         and timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(PROPERTY_CLOSEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n       \n        union   -- Deal Los -10\n        select\n           \n            COALESCE(count(deal.Source_DEAL_ID),0) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            10 AS r_metric_id,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal  inner join calendar on to_date(PROPERTY_CLOSEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%LOS%' \n         and PROPERTY_HS_IS_CLOSED='true'\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(PROPERTY_CLOSEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n\n      union -- calls -39\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            39 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='CALL'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n\n    union -- Task completed -89\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            89 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='TASK'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7     \n\n    union -- (Marketing MEETING) -71\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            71 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='MEETING'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7      \n\n    union -- (Notes) -76\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            76 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='NOTE'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7       \n\n    union -- (Emails Logged) -66\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            66 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='EMAIL'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7            \n\n\n\n\n\n\n\n\n),fs AS(\n    select sum(count) as f_count,\n    sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    cast(tmf.year as varchar(1000)) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME tmf\n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7\n union\n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    UPPER(MONTH_NAME) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='M'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.MONTH_END\n        and MONTHEND_FLAG='TRUE'\n    group by 3,4,5,6,7\n\n  union \n  \n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,tmf.QUTR_NUMBER as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='Q'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.QUARTER_END\n        and QUARTEREND_FLAG='TRUE'\n    group by 3,4,5,6,7\n\n  union \n  \n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,tmf.WEEK_NUM as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='W'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.WEEK_END\n        and WEEKEND_FLAG='TRUE'\n    group by 3,4,5,6,7  \n   \n\n), compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    --and case when r_type='Year' then cast('Y' as varchar(100)) else null end = cast(f_timeframe_type as varchar(1000)) ='Y'\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\nselect * from compare_result  --where 1=1\n  --and R_SOURCE_TYPE ='HS_RKLIVE_01042021'\n  --and r_metric_id=4\n  --and r_type='Year'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH PERIOD AS(\n     Select TYPE,start_date,end_date,\n            CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Year' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as timeframe_type from SF_RKLIVE_06012021.PERIOD\n       union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n           WHEN TYPE='Month' THEN UPPER(LTRIM(RTRIM(REPLACE(split(FULLY_QUALIFIED_LABEL,'FY ')[0],'\"', '')))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Quarter'  THEN UPPER(LTRIM(RTRIM(CAST(SUBSTRING(FULLY_QUALIFIED_LABEL, 2, 3) AS varchar(100))))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        \n),calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS (\n    --- SF  oppor_won-1\n       select \n            count(OPPORTUNITY.source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            1 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where OPPORTUNITY.IS_WON='true'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and OPPORTUNITY.Source_type=usr.Source_type\n         and to_date(OPPORTUNITY.close_date) between PERIOD.start_date and PERIOD.end_date\n         --and to_date(close_date) between '2017-01-01' and '2021-03-31'\n        group by 4,5,6,7\n\n         union   --Oppor loss -10\n        select \n            count(OPPORTUNITY.source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            10 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where OPPORTUNITY.IS_WON='false'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and OPPORTUNITY.Source_type=usr.Source_type\n         and to_date(OPPORTUNITY.close_date) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --converted_leads-3\n        select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            3 AS r_metric_id,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr  \n        where UPPER(IS_CONVERTED) = 'TRUE'\n         and timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CONVERTED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n       union --new leads -4\n        select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            4 AS r_metric_id,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr \n        where --UPPER(led.IS_CONVERTED) = 'FALSE'\n         --and upper(led.status)='NEW'\n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --accounts -27\n        select \n            count(acc.source_id) as r_count,\n            0 AS r_amount,\n            27 AS r_metric_id,\n            acc.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Account acc,PERIOD,DBT_SALESDATAFLO.STG_USER  usr   \n        where 1=1\n         and timeframe_type is not null\n         and acc.owner_id=usr.source_id\n         and acc.Source_type=usr.Source_type\n         and to_date(acc.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n        union --contact -29\n        select \n            count(contact.source_id) as r_count,\n            0 AS r_amount,\n            29 AS r_metric_id,\n            contact.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Contact contact,PERIOD ,DBT_SALESDATAFLO.STG_USER  usr  \n        where 1=1\n         and timeframe_type is not null\n         and contact.owner_id=usr.source_id\n         and contact.Source_type=usr.Source_type\n         and to_date(contact.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7\n\n       --HS\n        union   --deal won -1 PROPERTY_HS_CREATEDATE\n        select\n           \n            count(deal.Source_DEAL_ID) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            1 AS r_metric_id,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year \n        from DBT_SALESDATAFLO.Stg_Deal deal inner join calendar on to_date(deal.PROPERTY_CLOSEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%WON%' \n         and PROPERTY_HS_IS_CLOSED='true'\n         and timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(PROPERTY_CLOSEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n       \n        union   -- Deal Los -10\n        select\n           \n            COALESCE(count(deal.Source_DEAL_ID),0) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            10 AS r_metric_id,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal  inner join calendar on to_date(PROPERTY_CLOSEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(DEAL_PIPELINE_STAGE_ID) like '%CLOSED%LOS%' \n         and PROPERTY_HS_IS_CLOSED='true'\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(PROPERTY_CLOSEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n\n      union -- calls -39\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            39 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='CALL'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7\n\n    union -- Task completed -89\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            89 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='TASK'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7     \n\n    union -- (Marketing MEETING) -71\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            71 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='MEETING'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7      \n\n    union -- (Notes) -76\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            76 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='NOTE'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7       \n\n    union -- (Emails Logged) -66\n        select\n           \n            count(eng.Source_ID) as r_count,\n            0 AS r_amount,\n            66 AS r_metric_id,\n            eng.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Engagement eng inner join calendar on to_date(eng.CREATED_AT)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where Upper(eng.TYPE) ='EMAIL'\n         and eng.Owner_id  =  usr.Source_OWNER_ID and eng.Source_type = usr.Source_type\n         and timeframe_type is not null\n         and to_date(eng.CREATED_AT) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7            \n\n\n\n\n\n\n\n\n),fs AS(\n    select sum(count) as f_count,\n    sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    cast(tmf.year as varchar(1000)) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME tmf\n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7\n union\n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    UPPER(MONTH_NAME) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='M'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.MONTH_END\n        and MONTHEND_FLAG='TRUE'\n    group by 3,4,5,6,7\n\n  union \n  \n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,tmf.QUTR_NUMBER as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='Q'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.QUARTER_END\n        and QUARTEREND_FLAG='TRUE'\n    group by 3,4,5,6,7\n\n  union \n  \n    select sum(count) as f_count,sum(amount)as f_amount,entity_id as f_entity_id ,metric_id as f_metric_id,tmf.year as f_year,timeframe_type as f_timeframe_type,tmf.WEEK_NUM as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf\n    where \n        TIMEFRAME_TYPE='W'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.WEEK_END\n        and WEEKEND_FLAG='TRUE'\n    group by 3,4,5,6,7  \n   \n\n), compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    --and case when r_type='Year' then cast('Y' as varchar(100)) else null end = cast(f_timeframe_type as varchar(1000)) ='Y'\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\nselect * from compare_result  --where 1=1\n  --and R_SOURCE_TYPE ='HS_RKLIVE_01042021'\n  --and r_metric_id=4\n  --and r_type='Year'"}, "error": null, "status": "SUCCESS 1", "execution_time": 12.249619483947754, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-26T09:47:33.369650Z", "completed_at": "2021-05-26T09:47:33.411662Z"}, {"name": "execute", "started_at": "2021-05-26T09:47:33.411941Z", "completed_at": "2021-05-26T09:47:45.192656Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH PERIOD AS(\n     Select TYPE,start_date,end_date,\n            CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Year' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as timeframe_type from SF_RKLIVE_06012021.PERIOD\n       union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n           WHEN TYPE='Month' THEN UPPER(LTRIM(RTRIM(REPLACE(split(FULLY_QUALIFIED_LABEL,'FY ')[0],'\"', '')))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Quarter'  THEN UPPER(LTRIM(RTRIM(CAST(SUBSTRING(FULLY_QUALIFIED_LABEL, 2, 3) AS varchar(100))))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        \n),calendar AS(\n      select CLDR_DATE,CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE,CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),segr_metric AS (\n    --- SF  New Leads by industry 7\n       select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            7 AS r_metric_id,\n            led.INDUSTRY as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         --and owner_id in (select distinct source_id from DBT_SALESDATAFLO.STG_USER)\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8\n\n         -- New Leads by Lead Source 18\n     union\n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            18 AS r_metric_id,\n            led.LEAD_SOURCE as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n\n      union    --New Leads by Lead Status 19      \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            19 AS r_metric_id,\n            led.STATUS as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n\n      union    --Accounts by Type 28      \n     select \n            count(acc.source_id) as r_count,\n            0 AS r_amount,\n            28 AS r_metric_id,\n            acc.TYPE as r_segment_name,\n            acc.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Account acc ,PERIOD, DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and acc.Source_type=usr.Source_type\n         and to_date(acc.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n       \n      union    --Leads by emp_id= 30     \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            30 AS r_metric_id,\n            led.owner_id as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8  \n\n      union    --Leads by location= 31   \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            31 AS r_metric_id,\n            concat(led.street,' ',led.city,' ',led.state,' ',led.postal_code,' ',led.country) as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead as led ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8   \n     \n      union    --Opportunities by type = 32  \n     select \n            count(oppo.source_id) as r_count,\n            sum(oppo.AMOUNT) AS r_amount,\n            32 AS r_metric_id,\n            oppo.TYPE as r_segment_name,\n            oppo.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as oppo ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and oppo.Source_type=usr.Source_type\n         and to_date(oppo.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8   \n  -- HS\n       union    --Deals by Original Source Data= 52 \n      select \n            count(deal.Source_deal_id) as r_count,\n            COALESCE(sum(PROPERTY_AMOUNT),0) AS r_amount,\n            52 AS r_metric_id,\n            OPPORTUNITY_STG.Source as r_segment_name,\n            deal.Source_type as r_Source_type, \n            calendar.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal \n        left join DBT_SALESDATAFLO.Stg_Deal_Stage as OPPORTUNITY_STG on OPPORTUNITY_STG.SOURCE_DEAL_ID = deal.Source_DEAL_ID \n        and OPPORTUNITY_STG.Source_type = deal.Source_type \n        inner join calendar on to_date(deal.PROPERTY_CREATEDATE)=CLDR_DATE\n        ,DBT_SALESDATAFLO.Stg_Owner usr\n        where \n         timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(deal.PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date\n        group by 4,5,6,7,8   \n    \n    union   --Deals Created by Pipeline 62\n\n        select\n           \n            count(deal.Source_DEAL_ID) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            62 AS r_metric_id,\n            deal.DEAL_PIPELINE_STAGE_ID as r_segment_name,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal \n        inner join calendar on to_date(deal.PROPERTY_CREATEDATE)=CLDR_DATE, DBT_SALESDATAFLO.Stg_Owner usr\n         where \n         timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(deal.PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7,8\n    \n    union   --Revenue by Company 85\n\n        select\n           \n            count(cmpy.Source_ID) as r_count,\n            COALESCE(sum(cmpy.PROPERTY_ANNUALREVENUE),0) AS r_amount,\n            85 AS r_metric_id,\n            cmpy.PROPERTY_NAME as r_segment_name,\n            cmpy.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Company cmpy inner join calendar on to_date(PROPERTY_CREATEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where \n         timeframe_type is not null\n         and cmpy.PROPERTY_HUBSPOT_OWNER_ID  =  usr.Source_OWNER_ID and cmpy.Source_type = usr.Source_type\n         and to_date(PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7,8\n\n\n\n \n\n),seg_fs AS(\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    cast(tmf.year as varchar(10)) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7,8\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    UPPER(MONTH_NAME) as f_types_timeframe  from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='M'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.MONTH_END\n        and MONTHEND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    tmf.QUTR_NUMBER as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='Q'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.QUARTER_END\n        and QUARTEREND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    tmf.WEEK_NUM as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='W'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.WEEK_END\n        and WEEKEND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n),compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_segment_name,\n    f_segment_name,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES'\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from segr_metric ,seg_fs where segr_metric.r_metric_id=seg_fs.f_metric_id \n    and r_segment_name = f_segment_name\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\n\nselect * from compare_result --where r_type='Year' and R_SOURCE_TYPE ='HS_RKLIVE_01042021' --and r_metric_id= 32", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_UAT_Testing", "fqn": ["DBTTest", "UAT_Testing", "SF_HF_segmented"], "unique_id": "model.DBTTest.SF_HF_segmented", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "UAT_Testing/SF_HF_segmented.sql", "original_file_path": "models/UAT_Testing/SF_HF_segmented.sql", "name": "SF_HF_segmented", "resource_type": "model", "alias": "SF_HF_segmented", "checksum": {"name": "sha256", "checksum": "fc9e800996199b46b356dd04d1071455de76aa518023a2a0be214cab617fa8f3"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "UAT_Testing", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/UAT_Testing/SF_HF_segmented.sql", "deferred": false, "compiled_sql": "WITH PERIOD AS(\n     Select TYPE,start_date,end_date,\n            CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Year' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as timeframe_type from SF_RKLIVE_06012021.PERIOD\n       union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n           WHEN TYPE='Month' THEN UPPER(LTRIM(RTRIM(REPLACE(split(FULLY_QUALIFIED_LABEL,'FY ')[0],'\"', '')))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Quarter'  THEN UPPER(LTRIM(RTRIM(CAST(SUBSTRING(FULLY_QUALIFIED_LABEL, 2, 3) AS varchar(100))))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        \n),calendar AS(\n      select CLDR_DATE,CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE,CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),segr_metric AS (\n    --- SF  New Leads by industry 7\n       select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            7 AS r_metric_id,\n            led.INDUSTRY as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         --and owner_id in (select distinct source_id from DBT_SALESDATAFLO.STG_USER)\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8\n\n         -- New Leads by Lead Source 18\n     union\n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            18 AS r_metric_id,\n            led.LEAD_SOURCE as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n\n      union    --New Leads by Lead Status 19      \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            19 AS r_metric_id,\n            led.STATUS as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n\n      union    --Accounts by Type 28      \n     select \n            count(acc.source_id) as r_count,\n            0 AS r_amount,\n            28 AS r_metric_id,\n            acc.TYPE as r_segment_name,\n            acc.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Account acc ,PERIOD, DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and acc.Source_type=usr.Source_type\n         and to_date(acc.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n       \n      union    --Leads by emp_id= 30     \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            30 AS r_metric_id,\n            led.owner_id as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8  \n\n      union    --Leads by location= 31   \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            31 AS r_metric_id,\n            concat(led.street,' ',led.city,' ',led.state,' ',led.postal_code,' ',led.country) as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead as led ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8   \n     \n      union    --Opportunities by type = 32  \n     select \n            count(oppo.source_id) as r_count,\n            sum(oppo.AMOUNT) AS r_amount,\n            32 AS r_metric_id,\n            oppo.TYPE as r_segment_name,\n            oppo.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as oppo ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and oppo.Source_type=usr.Source_type\n         and to_date(oppo.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8   \n  -- HS\n       union    --Deals by Original Source Data= 52 \n      select \n            count(deal.Source_deal_id) as r_count,\n            COALESCE(sum(PROPERTY_AMOUNT),0) AS r_amount,\n            52 AS r_metric_id,\n            OPPORTUNITY_STG.Source as r_segment_name,\n            deal.Source_type as r_Source_type, \n            calendar.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal \n        left join DBT_SALESDATAFLO.Stg_Deal_Stage as OPPORTUNITY_STG on OPPORTUNITY_STG.SOURCE_DEAL_ID = deal.Source_DEAL_ID \n        and OPPORTUNITY_STG.Source_type = deal.Source_type \n        inner join calendar on to_date(deal.PROPERTY_CREATEDATE)=CLDR_DATE\n        ,DBT_SALESDATAFLO.Stg_Owner usr\n        where \n         timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(deal.PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date\n        group by 4,5,6,7,8   \n    \n    union   --Deals Created by Pipeline 62\n\n        select\n           \n            count(deal.Source_DEAL_ID) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            62 AS r_metric_id,\n            deal.DEAL_PIPELINE_STAGE_ID as r_segment_name,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal \n        inner join calendar on to_date(deal.PROPERTY_CREATEDATE)=CLDR_DATE, DBT_SALESDATAFLO.Stg_Owner usr\n         where \n         timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(deal.PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7,8\n    \n    union   --Revenue by Company 85\n\n        select\n           \n            count(cmpy.Source_ID) as r_count,\n            COALESCE(sum(cmpy.PROPERTY_ANNUALREVENUE),0) AS r_amount,\n            85 AS r_metric_id,\n            cmpy.PROPERTY_NAME as r_segment_name,\n            cmpy.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Company cmpy inner join calendar on to_date(PROPERTY_CREATEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where \n         timeframe_type is not null\n         and cmpy.PROPERTY_HUBSPOT_OWNER_ID  =  usr.Source_OWNER_ID and cmpy.Source_type = usr.Source_type\n         and to_date(PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7,8\n\n\n\n \n\n),seg_fs AS(\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    cast(tmf.year as varchar(10)) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7,8\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    UPPER(MONTH_NAME) as f_types_timeframe  from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='M'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.MONTH_END\n        and MONTHEND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    tmf.QUTR_NUMBER as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='Q'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.QUARTER_END\n        and QUARTEREND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    tmf.WEEK_NUM as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='W'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.WEEK_END\n        and WEEKEND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n),compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_segment_name,\n    f_segment_name,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES'\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from segr_metric ,seg_fs where segr_metric.r_metric_id=seg_fs.f_metric_id \n    and r_segment_name = f_segment_name\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\n\nselect * from compare_result --where r_type='Year' and R_SOURCE_TYPE ='HS_RKLIVE_01042021' --and r_metric_id= 32", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH PERIOD AS(\n     Select TYPE,start_date,end_date,\n            CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Year' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as timeframe_type from SF_RKLIVE_06012021.PERIOD\n       union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n           WHEN TYPE='Month' THEN UPPER(LTRIM(RTRIM(REPLACE(split(FULLY_QUALIFIED_LABEL,'FY ')[0],'\"', '')))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        union\n        Select TYPE,start_date,end_date,\n        CASE\n             WHEN TYPE='Year' OR TYPE='Quarter' or TYPE='Month' THEN cast (split(FULLY_QUALIFIED_LABEL,'FY ')[1] as varchar(1100)) \n            ELSE NULL end as year ,\n        CASE\n             WHEN TYPE='Quarter'  THEN UPPER(LTRIM(RTRIM(CAST(SUBSTRING(FULLY_QUALIFIED_LABEL, 2, 3) AS varchar(100))))) ELSE NULL END as timeframe_type from SF_RKLIVE_06012021.PERIOD\n        \n),calendar AS(\n      select CLDR_DATE,CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE,CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),segr_metric AS (\n    --- SF  New Leads by industry 7\n       select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            7 AS r_metric_id,\n            led.INDUSTRY as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         --and owner_id in (select distinct source_id from DBT_SALESDATAFLO.STG_USER)\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8\n\n         -- New Leads by Lead Source 18\n     union\n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            18 AS r_metric_id,\n            led.LEAD_SOURCE as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n\n      union    --New Leads by Lead Status 19      \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            19 AS r_metric_id,\n            led.STATUS as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n\n      union    --Accounts by Type 28      \n     select \n            count(acc.source_id) as r_count,\n            0 AS r_amount,\n            28 AS r_metric_id,\n            acc.TYPE as r_segment_name,\n            acc.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Account acc ,PERIOD, DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and acc.Source_type=usr.Source_type\n         and to_date(acc.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8 \n       \n      union    --Leads by emp_id= 30     \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            30 AS r_metric_id,\n            led.owner_id as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead led,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8  \n\n      union    --Leads by location= 31   \n     select \n            count(led.source_id) as r_count,\n            0 AS r_amount,\n            31 AS r_metric_id,\n            concat(led.street,' ',led.city,' ',led.state,' ',led.postal_code,' ',led.country) as r_segment_name,\n            led.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Lead as led ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and led.Source_type=usr.Source_type\n         and to_date(led.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8   \n     \n      union    --Opportunities by type = 32  \n     select \n            count(oppo.source_id) as r_count,\n            sum(oppo.AMOUNT) AS r_amount,\n            32 AS r_metric_id,\n            oppo.TYPE as r_segment_name,\n            oppo.Source_type as r_Source_type, \n            PERIOD.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as oppo ,PERIOD,DBT_SALESDATAFLO.STG_USER  usr\n        where \n         timeframe_type is not null\n         and owner_id=usr.source_id\n         and oppo.Source_type=usr.Source_type\n         and to_date(oppo.CREATED_DATE) between PERIOD.start_date and PERIOD.end_date\n        group by 4,5,6,7,8   \n  -- HS\n       union    --Deals by Original Source Data= 52 \n      select \n            count(deal.Source_deal_id) as r_count,\n            COALESCE(sum(PROPERTY_AMOUNT),0) AS r_amount,\n            52 AS r_metric_id,\n            OPPORTUNITY_STG.Source as r_segment_name,\n            deal.Source_type as r_Source_type, \n            calendar.TYPE as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal \n        left join DBT_SALESDATAFLO.Stg_Deal_Stage as OPPORTUNITY_STG on OPPORTUNITY_STG.SOURCE_DEAL_ID = deal.Source_DEAL_ID \n        and OPPORTUNITY_STG.Source_type = deal.Source_type \n        inner join calendar on to_date(deal.PROPERTY_CREATEDATE)=CLDR_DATE\n        ,DBT_SALESDATAFLO.Stg_Owner usr\n        where \n         timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(deal.PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date\n        group by 4,5,6,7,8   \n    \n    union   --Deals Created by Pipeline 62\n\n        select\n           \n            count(deal.Source_DEAL_ID) as r_count,\n            COALESCE(sum(deal.PROPERTY_AMOUNT),0) AS r_amount,\n            62 AS r_metric_id,\n            deal.DEAL_PIPELINE_STAGE_ID as r_segment_name,\n            deal.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Deal deal \n        inner join calendar on to_date(deal.PROPERTY_CREATEDATE)=CLDR_DATE, DBT_SALESDATAFLO.Stg_Owner usr\n         where \n         timeframe_type is not null\n         and deal.Owner_id  =  usr.Source_OWNER_ID and deal.Source_type = usr.Source_type\n         and to_date(deal.PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7,8\n    \n    union   --Revenue by Company 85\n\n        select\n           \n            count(cmpy.Source_ID) as r_count,\n            COALESCE(sum(cmpy.PROPERTY_ANNUALREVENUE),0) AS r_amount,\n            85 AS r_metric_id,\n            cmpy.PROPERTY_NAME as r_segment_name,\n            cmpy.Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Company cmpy inner join calendar on to_date(PROPERTY_CREATEDATE)=CLDR_DATE,DBT_SALESDATAFLO.Stg_Owner usr\n         where \n         timeframe_type is not null\n         and cmpy.PROPERTY_HUBSPOT_OWNER_ID  =  usr.Source_OWNER_ID and cmpy.Source_type = usr.Source_type\n         and to_date(PROPERTY_CREATEDATE) between calendar.start_date and calendar.end_date \n         group by 4,5,6,7,8\n\n\n\n \n\n),seg_fs AS(\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    cast(tmf.year as varchar(10)) as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7,8\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    UPPER(MONTH_NAME) as f_types_timeframe  from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='M'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.MONTH_END\n        and MONTHEND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    tmf.QUTR_NUMBER as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='Q'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.QUARTER_END\n        and QUARTEREND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n    union\n    select sum(count) as f_count,sum(amount)as f_amount,cast(entity_id as varchar(1000)) as f_entity_id,\n    metric_id as f_metric_id,segment_name as f_segment_name,tmf.year as f_year,timeframe_type as f_timeframe_type,\n    tmf.WEEK_NUM as f_types_timeframe from DBT_SALESDATAFLO.FACT_SALES_SEGMENTED as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME as tmf\n    where \n        TIMEFRAME_TYPE='W'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.WEEK_END\n        and WEEKEND_FLAG='TRUE'\n    group by 3,4,5,6,7,8\n\n),compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_segment_name,\n    f_segment_name,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES'\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from segr_metric ,seg_fs where segr_metric.r_metric_id=seg_fs.f_metric_id \n    and r_segment_name = f_segment_name\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\n\nselect * from compare_result --where r_type='Year' and R_SOURCE_TYPE ='HS_RKLIVE_01042021' --and r_metric_id= 32"}, "error": null, "status": "SUCCESS 1", "execution_time": 11.027630805969238, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-26T09:47:45.622209Z", "completed_at": "2021-05-26T09:47:45.672652Z"}, {"name": "execute", "started_at": "2021-05-26T09:47:45.673192Z", "completed_at": "2021-05-26T09:47:56.224297Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "With timeframe AS (\n  select TIMEFRAMEID,SOURCE_TYPE,year,week_start as start_date,week_end as end_date,'Week' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,WEEK_NUM as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(weekend_flag)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,month_start as start_date,month_end as end_date,'Month' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,MONTH_NAME as timeframe_type from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(monthend_flag)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,QUARTER_START as start_date,QUARTER_END as end_date,'Quarter' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,QUTR_NUMBER as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(QUARTEREND_FLAG)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,YEAR_START as start_date,YEAR_END as end_date,'Year' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER, cast(year as varchar(10)) as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(YEAREND_FLAG)='TRUE'\n  \n  ),r_metric AS (\n    select \n            count(source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            1 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            timeframe.type as r_type,\n            timeframe_type as r_timeframe_type,\n            WEEK_NUM as r_week_num,MONTH_NAME as r_month_name,QUTR_NUMBER as r_qutr_num,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,timeframe --inner join timeframe on to_date(OPPORTUNITY.CREATED_DATE) = timeframe.TIMEFRAMEID\n        where OPPORTUNITY.IS_WON='true'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and to_date(close_date) between timeframe.start_date and timeframe.end_date\n         --and to_date(close_date) between '2017-01-01' and '2021-03-31'\n        group by 4,5,6,7,8,9,10\n ),fs AS(\n    select sum(count) as f_count,\n            sum(AMOUNT) AS f_amount,\n            metric_id AS f_metric_id,\n            ENTITY_ID as f_entity_id, \n            TIMEFRAME_TYPE as f_timeframe_type,\n            cast(tmf.year as varchar(1000)) as f_types_timeframe,\n            tmf.year as f_year\n          from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf  \n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7\n\n ), compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from fs inner join r_metric on fs.f_metric_id=r_metric.r_metric_id where fs.f_metric_id=r_metric.r_metric_id\n    --and case when r_type='Year' then cast('Y' as varchar(100)) else null end = cast(f_timeframe_type as varchar(1000)) ='Y'\n    and SUBSTRING(CAST(r_type AS varchar(100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\nselect * from compare_result where f_timeframe_type='Y' and f_metric_id=1  and f_entity_id='SF_RKLIVE_06012021'", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_UAT_Testing", "fqn": ["DBTTest", "UAT_Testing", "Test_timeframe"], "unique_id": "model.DBTTest.Test_timeframe", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "UAT_Testing/Test_timeframe.sql", "original_file_path": "models/UAT_Testing/Test_timeframe.sql", "name": "Test_timeframe", "resource_type": "model", "alias": "Test_timeframe", "checksum": {"name": "sha256", "checksum": "20854f2cca89170381f9fa2bcc39bf73adfb2c59befa9bc553a43794f04556ec"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "UAT_Testing", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/UAT_Testing/Test_timeframe.sql", "deferred": false, "compiled_sql": "With timeframe AS (\n  select TIMEFRAMEID,SOURCE_TYPE,year,week_start as start_date,week_end as end_date,'Week' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,WEEK_NUM as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(weekend_flag)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,month_start as start_date,month_end as end_date,'Month' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,MONTH_NAME as timeframe_type from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(monthend_flag)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,QUARTER_START as start_date,QUARTER_END as end_date,'Quarter' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,QUTR_NUMBER as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(QUARTEREND_FLAG)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,YEAR_START as start_date,YEAR_END as end_date,'Year' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER, cast(year as varchar(10)) as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(YEAREND_FLAG)='TRUE'\n  \n  ),r_metric AS (\n    select \n            count(source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            1 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            timeframe.type as r_type,\n            timeframe_type as r_timeframe_type,\n            WEEK_NUM as r_week_num,MONTH_NAME as r_month_name,QUTR_NUMBER as r_qutr_num,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,timeframe --inner join timeframe on to_date(OPPORTUNITY.CREATED_DATE) = timeframe.TIMEFRAMEID\n        where OPPORTUNITY.IS_WON='true'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and to_date(close_date) between timeframe.start_date and timeframe.end_date\n         --and to_date(close_date) between '2017-01-01' and '2021-03-31'\n        group by 4,5,6,7,8,9,10\n ),fs AS(\n    select sum(count) as f_count,\n            sum(AMOUNT) AS f_amount,\n            metric_id AS f_metric_id,\n            ENTITY_ID as f_entity_id, \n            TIMEFRAME_TYPE as f_timeframe_type,\n            cast(tmf.year as varchar(1000)) as f_types_timeframe,\n            tmf.year as f_year\n          from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf  \n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7\n\n ), compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from fs inner join r_metric on fs.f_metric_id=r_metric.r_metric_id where fs.f_metric_id=r_metric.r_metric_id\n    --and case when r_type='Year' then cast('Y' as varchar(100)) else null end = cast(f_timeframe_type as varchar(1000)) ='Y'\n    and SUBSTRING(CAST(r_type AS varchar(100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\nselect * from compare_result where f_timeframe_type='Y' and f_metric_id=1  and f_entity_id='SF_RKLIVE_06012021'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "With timeframe AS (\n  select TIMEFRAMEID,SOURCE_TYPE,year,week_start as start_date,week_end as end_date,'Week' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,WEEK_NUM as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(weekend_flag)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,month_start as start_date,month_end as end_date,'Month' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,MONTH_NAME as timeframe_type from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(monthend_flag)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,QUARTER_START as start_date,QUARTER_END as end_date,'Quarter' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER,QUTR_NUMBER as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(QUARTEREND_FLAG)='TRUE'\n  union \n  select TIMEFRAMEID,SOURCE_TYPE,year,YEAR_START as start_date,YEAR_END as end_date,'Year' as type,WEEK_NUM,MONTH_NAME,QUTR_NUMBER, cast(year as varchar(10)) as timeframe_type  from DBT_SALESDATAFLO.DIM_TIMEFRAME where UPPER(YEAREND_FLAG)='TRUE'\n  \n  ),r_metric AS (\n    select \n            count(source_id) as r_count,\n            sum(OPPORTUNITY.AMOUNT) AS r_amount,\n            1 AS r_metric_id,\n            OPPORTUNITY.Source_type as r_Source_type, \n            timeframe.type as r_type,\n            timeframe_type as r_timeframe_type,\n            WEEK_NUM as r_week_num,MONTH_NAME as r_month_name,QUTR_NUMBER as r_qutr_num,\n            year as r_year\n        from DBT_SALESDATAFLO.Stg_Opportunity as OPPORTUNITY,timeframe --inner join timeframe on to_date(OPPORTUNITY.CREATED_DATE) = timeframe.TIMEFRAMEID\n        where OPPORTUNITY.IS_WON='true'\n         and OPPORTUNITY.IS_CLOSED='true'\n         and timeframe_type is not null\n         and to_date(close_date) between timeframe.start_date and timeframe.end_date\n         --and to_date(close_date) between '2017-01-01' and '2021-03-31'\n        group by 4,5,6,7,8,9,10\n ),fs AS(\n    select sum(count) as f_count,\n            sum(AMOUNT) AS f_amount,\n            metric_id AS f_metric_id,\n            ENTITY_ID as f_entity_id, \n            TIMEFRAME_TYPE as f_timeframe_type,\n            cast(tmf.year as varchar(1000)) as f_types_timeframe,\n            tmf.year as f_year\n          from DBT_SALESDATAFLO.FACT_SALES as sf,DBT_SALESDATAFLO.DIM_TIMEFRAME  tmf  \n    where \n        TIMEFRAME_TYPE='Y'\n        and sf.entity_id = tmf.source_type\n        and REPORT_DATE=tmf.year_end\n        and Yearend_flag='TRUE'\n    group by 3,4,5,6,7\n\n ), compare_result AS(\n    select \n    r_count,\n    f_count,\n    r_amount,\n    f_amount,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_id,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_count <> f_count THEN 'YES'\n            WHEN r_amount <> f_amount THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_id THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from fs inner join r_metric on fs.f_metric_id=r_metric.r_metric_id where fs.f_metric_id=r_metric.r_metric_id\n    --and case when r_type='Year' then cast('Y' as varchar(100)) else null end = cast(f_timeframe_type as varchar(1000)) ='Y'\n    and SUBSTRING(CAST(r_type AS varchar(100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_id\n\n\n)\n\nselect * from compare_result where f_timeframe_type='Y' and f_metric_id=1  and f_entity_id='SF_RKLIVE_06012021'"}, "error": null, "status": "SUCCESS 1", "execution_time": 3.425860643386841, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-26T09:47:56.652373Z", "completed_at": "2021-05-26T09:47:56.674897Z"}, {"name": "execute", "started_at": "2021-05-26T09:47:56.675133Z", "completed_at": "2021-05-26T09:47:59.648060Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS(\n         \n         ---========================= 1.GA =====================================================\n        select\n           \n            coalesce(sum(SESSIONS_PER_USER), 0)  as r_value,\n            139 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Session ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n\n     select\n           \n            coalesce(sum(SESSIONS), 0)  as r_value,\n            140 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n      \n      union\n\n     select\n           \n            coalesce(sum(PERCENT_NEW_SESSIONS), 0)  as r_value,\n            141 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n     \n     union\n\n     select\n           \n            coalesce(sum(NEW_USERS), 0)  as r_value,\n            142 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n\n      union\n\n     select\n           \n            coalesce(sum(PAGEVIEWS), 0)  as r_value,\n            143 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n\n     union\n\n     select\n           \n            coalesce(sum(PAGEVIEWS_PER_SESSION), 0)  as r_value,\n            144 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n     union\n\n     select\n           \n            coalesce(sum(BOUNCE_RATE), 0)  as r_value,\n            145 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Session ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6          \n\n     union\n\n     select\n           \n            coalesce(sum(AVG_SESSION_DURATION), 0)  as r_value,\n            147 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n      union\n\n     select\n           \n            coalesce(sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            151 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6          \n\n      union\n\n     select\n           \n            coalesce(sum(GOAL_CONVERSION_RATE_ALL), 0)  as r_value,\n            152 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                          \n     \n     union\n\n     select\n           \n            coalesce(sum(TRANSACTIONS_PER_SESSION), 0)  as r_value,\n            158 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n\n     select\n           \n            coalesce(sum(TOTAL_EVENTS), 0)  as r_value,\n            163 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Events_Overview ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n     union\n\n     select\n           \n            coalesce(Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1), 0)  as r_value,\n            164 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                   \n\n     union\n\n     select\n           \n            coalesce(Sum(TIME_ON_PAGE), 0)  as r_value,\n            166 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                                             \n      union\n\n     select\n           \n            coalesce(Sum(UNIQUE_PAGEVIEWS), 0)  as r_value,\n            167 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                  \n\n    ---========================= 2.GSC =====================================================\n       union\n\n        select\n           \n            coalesce(sum(clicks), 0)  as r_value,\n            195 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n        select\n           \n            coalesce(sum(impressions), 0)  as r_value,\n            198 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6         \n\n    union\n        select\n           \n            coalesce(sum(CTR), 0)  as r_value,\n            199 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n),fs AS(\n\n     select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     cast(cldr.year as varchar(1000)) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Y'\n        --and fm.ENTITY_CODE = 'GSC_ANANDLIVE_14052021'\n        and REPORT_DATE between cldr.CLDR_YEAR_START_DT and cldr.CLDR_YEAR_END_DT \n        --and METRIC_ID=198\n        --and YEAREND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(CLDR_QTR) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Q'\n        and REPORT_DATE between cldr.CLDR_QTR_STRT_DT and cldr.CLDR_QTR_END_DT \n        --and QUARTEREND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(MONTH_NAME) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='M'\n        and REPORT_DATE between cldr.CLDR_MNTH_STRT_DT and cldr.CLDR_MNTH_END_DT \n        --and MONTHEND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='W'\n        and REPORT_DATE between cldr.WEEK_START_DATE and cldr.WEEK_END_DATE \n        --and WEEKEND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n\n), compare_result AS(\n    select \n    r_value,\n    f_value,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_code,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_value <> f_value THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_code THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_code\n\n\n)\n\n\n\nselect * from compare_result --where r_type='Year' and r_metric_id=140 --and f_entity_code='GSC_ANANDLIVE_14052021'", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_UAT_Testing", "fqn": ["DBTTest", "UAT_Testing", "marketing_fact"], "unique_id": "model.DBTTest.marketing_fact", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "UAT_Testing/marketing_fact.sql", "original_file_path": "models/UAT_Testing/marketing_fact.sql", "name": "marketing_fact", "resource_type": "model", "alias": "marketing_fact", "checksum": {"name": "sha256", "checksum": "3c8db9fbf90fdeeaa8e870f47ddb395ccc40b189c69104a4cde789a837e9e810"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "UAT_Testing", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/UAT_Testing/marketing_fact.sql", "deferred": false, "compiled_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS(\n         \n         ---========================= 1.GA =====================================================\n        select\n           \n            coalesce(sum(SESSIONS_PER_USER), 0)  as r_value,\n            139 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Session ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n\n     select\n           \n            coalesce(sum(SESSIONS), 0)  as r_value,\n            140 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n      \n      union\n\n     select\n           \n            coalesce(sum(PERCENT_NEW_SESSIONS), 0)  as r_value,\n            141 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n     \n     union\n\n     select\n           \n            coalesce(sum(NEW_USERS), 0)  as r_value,\n            142 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n\n      union\n\n     select\n           \n            coalesce(sum(PAGEVIEWS), 0)  as r_value,\n            143 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n\n     union\n\n     select\n           \n            coalesce(sum(PAGEVIEWS_PER_SESSION), 0)  as r_value,\n            144 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n     union\n\n     select\n           \n            coalesce(sum(BOUNCE_RATE), 0)  as r_value,\n            145 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Session ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6          \n\n     union\n\n     select\n           \n            coalesce(sum(AVG_SESSION_DURATION), 0)  as r_value,\n            147 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n      union\n\n     select\n           \n            coalesce(sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            151 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6          \n\n      union\n\n     select\n           \n            coalesce(sum(GOAL_CONVERSION_RATE_ALL), 0)  as r_value,\n            152 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                          \n     \n     union\n\n     select\n           \n            coalesce(sum(TRANSACTIONS_PER_SESSION), 0)  as r_value,\n            158 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n\n     select\n           \n            coalesce(sum(TOTAL_EVENTS), 0)  as r_value,\n            163 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Events_Overview ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n     union\n\n     select\n           \n            coalesce(Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1), 0)  as r_value,\n            164 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                   \n\n     union\n\n     select\n           \n            coalesce(Sum(TIME_ON_PAGE), 0)  as r_value,\n            166 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                                             \n      union\n\n     select\n           \n            coalesce(Sum(UNIQUE_PAGEVIEWS), 0)  as r_value,\n            167 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                  \n\n    ---========================= 2.GSC =====================================================\n       union\n\n        select\n           \n            coalesce(sum(clicks), 0)  as r_value,\n            195 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n        select\n           \n            coalesce(sum(impressions), 0)  as r_value,\n            198 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6         \n\n    union\n        select\n           \n            coalesce(sum(CTR), 0)  as r_value,\n            199 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n),fs AS(\n\n     select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     cast(cldr.year as varchar(1000)) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Y'\n        --and fm.ENTITY_CODE = 'GSC_ANANDLIVE_14052021'\n        and REPORT_DATE between cldr.CLDR_YEAR_START_DT and cldr.CLDR_YEAR_END_DT \n        --and METRIC_ID=198\n        --and YEAREND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(CLDR_QTR) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Q'\n        and REPORT_DATE between cldr.CLDR_QTR_STRT_DT and cldr.CLDR_QTR_END_DT \n        --and QUARTEREND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(MONTH_NAME) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='M'\n        and REPORT_DATE between cldr.CLDR_MNTH_STRT_DT and cldr.CLDR_MNTH_END_DT \n        --and MONTHEND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='W'\n        and REPORT_DATE between cldr.WEEK_START_DATE and cldr.WEEK_END_DATE \n        --and WEEKEND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n\n), compare_result AS(\n    select \n    r_value,\n    f_value,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_code,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_value <> f_value THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_code THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_code\n\n\n)\n\n\n\nselect * from compare_result --where r_type='Year' and r_metric_id=140 --and f_entity_code='GSC_ANANDLIVE_14052021'", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS(\n         \n         ---========================= 1.GA =====================================================\n        select\n           \n            coalesce(sum(SESSIONS_PER_USER), 0)  as r_value,\n            139 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Session ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n\n     select\n           \n            coalesce(sum(SESSIONS), 0)  as r_value,\n            140 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n      \n      union\n\n     select\n           \n            coalesce(sum(PERCENT_NEW_SESSIONS), 0)  as r_value,\n            141 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n     \n     union\n\n     select\n           \n            coalesce(sum(NEW_USERS), 0)  as r_value,\n            142 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n\n      union\n\n     select\n           \n            coalesce(sum(PAGEVIEWS), 0)  as r_value,\n            143 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6       \n\n     union\n\n     select\n           \n            coalesce(sum(PAGEVIEWS_PER_SESSION), 0)  as r_value,\n            144 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n     union\n\n     select\n           \n            coalesce(sum(BOUNCE_RATE), 0)  as r_value,\n            145 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Session ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6          \n\n     union\n\n     select\n           \n            coalesce(sum(AVG_SESSION_DURATION), 0)  as r_value,\n            147 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6        \n\n      union\n\n     select\n           \n            coalesce(sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            151 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6          \n\n      union\n\n     select\n           \n            coalesce(sum(GOAL_CONVERSION_RATE_ALL), 0)  as r_value,\n            152 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                          \n     \n     union\n\n     select\n           \n            coalesce(sum(TRANSACTIONS_PER_SESSION), 0)  as r_value,\n            158 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n\n     select\n           \n            coalesce(sum(TOTAL_EVENTS), 0)  as r_value,\n            163 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Events_Overview ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6      \n\n     union\n\n     select\n           \n            coalesce(Sum(TRANSACTIONS)/decode(Sum(NEW_USERS),0,1), 0)  as r_value,\n            164 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                   \n\n     union\n\n     select\n           \n            coalesce(Sum(TIME_ON_PAGE), 0)  as r_value,\n            166 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                                             \n      union\n\n     select\n           \n            coalesce(Sum(UNIQUE_PAGEVIEWS), 0)  as r_value,\n            167 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6                  \n\n    ---========================= 2.GSC =====================================================\n       union\n\n        select\n           \n            coalesce(sum(clicks), 0)  as r_value,\n            195 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n     union\n        select\n           \n            coalesce(sum(impressions), 0)  as r_value,\n            198 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6         \n\n    union\n        select\n           \n            coalesce(sum(CTR), 0)  as r_value,\n            199 AS r_metric_id,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n      from DBT_SALESDATAFLO.Stg_Site_Report_By_Site site inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6   \n\n),fs AS(\n\n     select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     cast(cldr.year as varchar(1000)) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Y'\n        --and fm.ENTITY_CODE = 'GSC_ANANDLIVE_14052021'\n        and REPORT_DATE between cldr.CLDR_YEAR_START_DT and cldr.CLDR_YEAR_END_DT \n        --and METRIC_ID=198\n        --and YEAREND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(CLDR_QTR) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Q'\n        and REPORT_DATE between cldr.CLDR_QTR_STRT_DT and cldr.CLDR_QTR_END_DT \n        --and QUARTEREND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(MONTH_NAME) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='M'\n        and REPORT_DATE between cldr.CLDR_MNTH_STRT_DT and cldr.CLDR_MNTH_END_DT \n        --and MONTHEND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='W'\n        and REPORT_DATE between cldr.WEEK_START_DATE and cldr.WEEK_END_DATE \n        --and WEEKEND_FLAG='TRUE'\n     group by 2,3,4,5,6\n\n\n), compare_result AS(\n    select \n    r_value,\n    f_value,\n    r_metric_id,\n    f_metric_id,\n    r_Source_type,\n    f_entity_code,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_value <> f_value THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_code THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_code\n\n\n)\n\n\n\nselect * from compare_result --where r_type='Year' and r_metric_id=140 --and f_entity_code='GSC_ANANDLIVE_14052021'"}, "error": null, "status": "SUCCESS 1", "execution_time": 6.25001859664917, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-26T09:48:00.080918Z", "completed_at": "2021-05-26T09:48:00.138067Z"}, {"name": "execute", "started_at": "2021-05-26T09:48:00.138330Z", "completed_at": "2021-05-26T09:48:05.909199Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS(\n         \n         ---========================= 1.GA =====================================================\n       select\n           \n            coalesce(count(*), 0)  as r_value,\n            93 AS r_metric_id,\n            DEVICE_CATEGORY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Platform_Device ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n\n       select\n           \n            coalesce(sum(SESSIONS), 0)  as r_value,\n            94 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7    \n       \n      union\n\n       select\n           \n            coalesce(count(*), 0)  as r_value,\n            95 AS r_metric_id,\n            SOCIAL_NETWORK as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n      \n      union\n          select\n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            99 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7     \n      \n      union\n        select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            101 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.stg_Adwords_Keyword ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(KEYWORD)= 'ORGANIC'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n\n      union\n         select\n            coalesce(Sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            102 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            108 AS r_metric_id,\n            GOAL_COMPLETION_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            109 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Adwords_Keyword ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(KEYWORD)='PAID'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7    \n\n      union\n       select\n            coalesce(Sum(GOAL_VALUE_ALL), 0)  as r_value,\n            110 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7            \n\n     union\n       select\n            coalesce(Sum(GOAL_VALUE_ALL), 0)  as r_value,\n            112 AS r_metric_id,\n            GOAL_COMPLETION_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n     union\n       select\n            coalesce(Sum(PAGEVIEWS_PER_SESSION), 0)  as r_value,\n            114 AS r_metric_id,\n            LANDING_PAGE_PATH as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Count(*), 0)  as r_value,\n            115 AS r_metric_id,\n            PAGE_TITLE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            120 AS r_metric_id,\n            NETWORK_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Geo_Network ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(USERS), 0)  as r_value,\n            125 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n\n     union\n       select\n            coalesce(Sum(PAGEVIEWS), 0)  as r_value,\n            130 AS r_metric_id,\n            cast(NEW_USERS as varchar) as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7                 \n      \n      union\n       select\n           \n            coalesce(Sum(SESSIONS_WITH_EVENT), 0)  as r_value,\n            131 AS r_metric_id,\n            EVENT_CATEGORY  as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Events_Overview ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            139 AS r_metric_id,\n            cast(USERS as varchar)  as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(CHANNEL_GROUPING)='ORGANIC'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n  --======================================== 2.GSC ===========================================================================\n      union\n       select\n           \n            coalesce(Sum(CLICKS), 0)  as r_value,\n            196 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n     union\n       select\n           \n            coalesce(Sum(CLICKS), 0)  as r_value,\n            197 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7      \n   \n      union\n       select\n           \n            coalesce(Sum(CTR), 0)  as r_value,\n            200 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            201 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n     union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            202 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            204 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            205 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            206 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            207 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            208 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7     \n\n      union\n       select\n            coalesce(Sum(CLICKS), 0)  as r_value,\n            209 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(CLICKS), 0)  as r_value,\n            210 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n      \n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            211 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            212 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            213 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            214 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7      \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            215 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            216 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7       \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            217 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7                \n\n),fs AS(\n\n     select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     cast(cldr.year as varchar(1000)) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Y'\n        --and fm.ENTITY_CODE = 'GSC_ANANDLIVE_14052021'\n        and REPORT_DATE between cldr.CLDR_YEAR_START_DT and cldr.CLDR_YEAR_END_DT \n        --and METRIC_ID=198\n        --and YEAREND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(CLDR_QTR) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Q'\n        and REPORT_DATE between cldr.CLDR_QTR_STRT_DT and cldr.CLDR_QTR_END_DT \n        --and QUARTEREND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(MONTH_NAME) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='M'\n        and REPORT_DATE between cldr.CLDR_MNTH_STRT_DT and cldr.CLDR_MNTH_END_DT \n        --and MONTHEND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='W'\n        and REPORT_DATE between cldr.WEEK_START_DATE and cldr.WEEK_END_DATE \n        --and WEEKEND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n\n), compare_result AS(\n    select \n    r_value,\n    f_value,\n    r_metric_id,\n    f_metric_id,\n    r_segment_name,\n    f_segment_name,\n    r_Source_type,\n    f_entity_code,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_value <> f_value THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_code THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    and r_segment_name = f_segment_name\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_code\n\n\n)  \n\n\n\nselect distinct * from compare_result -- where r_type='Month' and r_source_type ='GSC_ANANDLIVE_14052021' --and r_metric_id=93", "compiled": true, "database": "DATAFLOTEST_DATABASE", "schema": "dbt_test_UAT_Testing", "fqn": ["DBTTest", "UAT_Testing", "marketing_segment"], "unique_id": "model.DBTTest.marketing_segment", "package_name": "DBTTest", "root_path": "/usr/src/develop/user-10139/environment-12916/repository-12316", "path": "UAT_Testing/marketing_segment.sql", "original_file_path": "models/UAT_Testing/marketing_segment.sql", "name": "marketing_segment", "resource_type": "model", "alias": "marketing_segment", "checksum": {"name": "sha256", "checksum": "8999e2aea5d2bb62b078e9bf37189d1a4c81b09b5ce8920c5952d7bb47422462"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "UAT_Testing", "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/DBTTest/models/UAT_Testing/marketing_segment.sql", "deferred": false, "compiled_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS(\n         \n         ---========================= 1.GA =====================================================\n       select\n           \n            coalesce(count(*), 0)  as r_value,\n            93 AS r_metric_id,\n            DEVICE_CATEGORY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Platform_Device ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n\n       select\n           \n            coalesce(sum(SESSIONS), 0)  as r_value,\n            94 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7    \n       \n      union\n\n       select\n           \n            coalesce(count(*), 0)  as r_value,\n            95 AS r_metric_id,\n            SOCIAL_NETWORK as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n      \n      union\n          select\n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            99 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7     \n      \n      union\n        select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            101 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.stg_Adwords_Keyword ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(KEYWORD)= 'ORGANIC'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n\n      union\n         select\n            coalesce(Sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            102 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            108 AS r_metric_id,\n            GOAL_COMPLETION_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            109 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Adwords_Keyword ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(KEYWORD)='PAID'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7    \n\n      union\n       select\n            coalesce(Sum(GOAL_VALUE_ALL), 0)  as r_value,\n            110 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7            \n\n     union\n       select\n            coalesce(Sum(GOAL_VALUE_ALL), 0)  as r_value,\n            112 AS r_metric_id,\n            GOAL_COMPLETION_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n     union\n       select\n            coalesce(Sum(PAGEVIEWS_PER_SESSION), 0)  as r_value,\n            114 AS r_metric_id,\n            LANDING_PAGE_PATH as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Count(*), 0)  as r_value,\n            115 AS r_metric_id,\n            PAGE_TITLE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            120 AS r_metric_id,\n            NETWORK_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Geo_Network ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(USERS), 0)  as r_value,\n            125 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n\n     union\n       select\n            coalesce(Sum(PAGEVIEWS), 0)  as r_value,\n            130 AS r_metric_id,\n            cast(NEW_USERS as varchar) as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7                 \n      \n      union\n       select\n           \n            coalesce(Sum(SESSIONS_WITH_EVENT), 0)  as r_value,\n            131 AS r_metric_id,\n            EVENT_CATEGORY  as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Events_Overview ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            139 AS r_metric_id,\n            cast(USERS as varchar)  as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(CHANNEL_GROUPING)='ORGANIC'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n  --======================================== 2.GSC ===========================================================================\n      union\n       select\n           \n            coalesce(Sum(CLICKS), 0)  as r_value,\n            196 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n     union\n       select\n           \n            coalesce(Sum(CLICKS), 0)  as r_value,\n            197 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7      \n   \n      union\n       select\n           \n            coalesce(Sum(CTR), 0)  as r_value,\n            200 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            201 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n     union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            202 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            204 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            205 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            206 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            207 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            208 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7     \n\n      union\n       select\n            coalesce(Sum(CLICKS), 0)  as r_value,\n            209 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(CLICKS), 0)  as r_value,\n            210 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n      \n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            211 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            212 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            213 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            214 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7      \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            215 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            216 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7       \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            217 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7                \n\n),fs AS(\n\n     select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     cast(cldr.year as varchar(1000)) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Y'\n        --and fm.ENTITY_CODE = 'GSC_ANANDLIVE_14052021'\n        and REPORT_DATE between cldr.CLDR_YEAR_START_DT and cldr.CLDR_YEAR_END_DT \n        --and METRIC_ID=198\n        --and YEAREND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(CLDR_QTR) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Q'\n        and REPORT_DATE between cldr.CLDR_QTR_STRT_DT and cldr.CLDR_QTR_END_DT \n        --and QUARTEREND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(MONTH_NAME) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='M'\n        and REPORT_DATE between cldr.CLDR_MNTH_STRT_DT and cldr.CLDR_MNTH_END_DT \n        --and MONTHEND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='W'\n        and REPORT_DATE between cldr.WEEK_START_DATE and cldr.WEEK_END_DATE \n        --and WEEKEND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n\n), compare_result AS(\n    select \n    r_value,\n    f_value,\n    r_metric_id,\n    f_metric_id,\n    r_segment_name,\n    f_segment_name,\n    r_Source_type,\n    f_entity_code,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_value <> f_value THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_code THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    and r_segment_name = f_segment_name\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_code\n\n\n)  \n\n\n\nselect distinct * from compare_result -- where r_type='Month' and r_source_type ='GSC_ANANDLIVE_14052021' --and r_metric_id=93", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "With calendar AS(\n      select CLDR_DATE, CLDR_YEAR_START_DT as start_date,CLDR_YEAR_END_DT as end_date,year,'Year' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,cast(year as varchar(1000)) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR \n     union\n     select CLDR_DATE, CLDR_MNTH_STRT_DT as start_date,CLDR_MNTH_END_DT as end_date,year,'Month' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(MONTH_NAME) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n    union\n     select CLDR_DATE,WEEK_START_DATE as start_date,WEEK_END_DATE as end_date,year,'Week'as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n     union\n     select CLDR_DATE,CLDR_QTR_STRT_DT as start_date,CLDR_QTR_END_DT as end_date,year,'Quarter' as type,MONTH_NAME,CLDR_WEEK_NUM,CLDR_QTR,UPPER(CLDR_QTR) as timeframe_type from DBT_SALESDATAFLO.DIM_CALENDAR\n\n),r_metric AS(\n         \n         ---========================= 1.GA =====================================================\n       select\n           \n            coalesce(count(*), 0)  as r_value,\n            93 AS r_metric_id,\n            DEVICE_CATEGORY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Platform_Device ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n\n       select\n           \n            coalesce(sum(SESSIONS), 0)  as r_value,\n            94 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7    \n       \n      union\n\n       select\n           \n            coalesce(count(*), 0)  as r_value,\n            95 AS r_metric_id,\n            SOCIAL_NETWORK as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n      \n      union\n          select\n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            99 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7     \n      \n      union\n        select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            101 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.stg_Adwords_Keyword ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(KEYWORD)= 'ORGANIC'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n\n      union\n         select\n            coalesce(Sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            102 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(GOAL_COMPLETIONS_ALL), 0)  as r_value,\n            108 AS r_metric_id,\n            GOAL_COMPLETION_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            109 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Adwords_Keyword ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(KEYWORD)='PAID'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7    \n\n      union\n       select\n            coalesce(Sum(GOAL_VALUE_ALL), 0)  as r_value,\n            110 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7            \n\n     union\n       select\n            coalesce(Sum(GOAL_VALUE_ALL), 0)  as r_value,\n            112 AS r_metric_id,\n            GOAL_COMPLETION_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Goal_Conversions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n     union\n       select\n            coalesce(Sum(PAGEVIEWS_PER_SESSION), 0)  as r_value,\n            114 AS r_metric_id,\n            LANDING_PAGE_PATH as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Tracking ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Count(*), 0)  as r_value,\n            115 AS r_metric_id,\n            PAGE_TITLE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            120 AS r_metric_id,\n            NETWORK_LOCATION as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Geo_Network ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(USERS), 0)  as r_value,\n            125 AS r_metric_id,\n            CHANNEL_GROUPING as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n\n     union\n       select\n            coalesce(Sum(PAGEVIEWS), 0)  as r_value,\n            130 AS r_metric_id,\n            cast(NEW_USERS as varchar) as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Social_Media_Acquisitions ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7                 \n      \n      union\n       select\n           \n            coalesce(Sum(SESSIONS_WITH_EVENT), 0)  as r_value,\n            131 AS r_metric_id,\n            EVENT_CATEGORY  as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Events_Overview ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n           \n            coalesce(Sum(SESSIONS), 0)  as r_value,\n            139 AS r_metric_id,\n            cast(USERS as varchar)  as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Channel_Traffic ga inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and upper(CHANNEL_GROUPING)='ORGANIC'\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n  --======================================== 2.GSC ===========================================================================\n      union\n       select\n           \n            coalesce(Sum(CLICKS), 0)  as r_value,\n            196 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n     union\n       select\n           \n            coalesce(Sum(CLICKS), 0)  as r_value,\n            197 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7      \n   \n      union\n       select\n           \n            coalesce(Sum(CTR), 0)  as r_value,\n            200 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7  \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            201 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n     union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            202 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            204 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            205 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            206 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n      \n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            207 AS r_metric_id,\n            KEYWORD as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Keyword_Site_Report_By_Site GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            208 AS r_metric_id,\n            PAGE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7     \n\n      union\n       select\n            coalesce(Sum(CLICKS), 0)  as r_value,\n            209 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(CLICKS), 0)  as r_value,\n            210 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7 \n      \n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            211 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            212 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(IMPRESSIONS), 0)  as r_value,\n            213 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7   \n\n      union\n       select\n            coalesce(Sum(POSITION), 0)  as r_value,\n            214 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7      \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            215 AS r_metric_id,\n            COUNTRY as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7\n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            216 AS r_metric_id,\n            DEVICE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7       \n\n      union\n       select\n            coalesce(Sum(CTR), 0)  as r_value,\n            217 AS r_metric_id,\n            SEARCH_TYPE as r_segment_name,\n            Source_type as r_Source_type,\n            calendar.type as r_type,\n            timeframe_type as r_timeframe_type,\n            year as r_year\n       from DBT_SALESDATAFLO.Stg_Page_Report GSC inner join calendar on to_date(DATE)=CLDR_DATE\n         where \n         timeframe_type is not null\n         and to_date(DATE) between calendar.start_date and calendar.end_date \n         group by 3,4,5,6,7                \n\n),fs AS(\n\n     select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     cast(cldr.year as varchar(1000)) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Y'\n        --and fm.ENTITY_CODE = 'GSC_ANANDLIVE_14052021'\n        and REPORT_DATE between cldr.CLDR_YEAR_START_DT and cldr.CLDR_YEAR_END_DT \n        --and METRIC_ID=198\n        --and YEAREND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(CLDR_QTR) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='Q'\n        and REPORT_DATE between cldr.CLDR_QTR_STRT_DT and cldr.CLDR_QTR_END_DT \n        --and QUARTEREND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     UPPER(MONTH_NAME) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='M'\n        and REPORT_DATE between cldr.CLDR_MNTH_STRT_DT and cldr.CLDR_MNTH_END_DT \n        --and MONTHEND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n     union\n\n      select \n     sum(value) f_value,\n     metric_id as f_metric_id,\n     segment_name as f_segment_name,\n     entity_code as f_entity_code,\n     timeframe_type as f_timeframe_type,\n     cldr.year as f_year,\n     CONCAT('W',cast(CLDR_WEEK_NUM as varchar(1000))) as f_types_timeframe\n      from DBT_SALESDATAFLO.FACT_MARKETING_SEGMENTED fm\n        inner join DBT_SALESDATAFLO.DIM_CALENDAR as cldr on fm.REPORT_DATE=cldr.CLDR_DATE\n     where \n        TIMEFRAME_TYPE='W'\n        and REPORT_DATE between cldr.WEEK_START_DATE and cldr.WEEK_END_DATE \n        --and WEEKEND_FLAG='TRUE'\n     group by 2,3,4,5,6,7\n\n\n), compare_result AS(\n    select \n    r_value,\n    f_value,\n    r_metric_id,\n    f_metric_id,\n    r_segment_name,\n    f_segment_name,\n    r_Source_type,\n    f_entity_code,\n    r_type,\n    f_timeframe_type,\n    r_timeframe_type,\n    f_types_timeframe,\n    r_year,\n    f_year,\n    CASE\n            WHEN r_value <> f_value THEN 'YES'\n            WHEN r_metric_id <> f_metric_id THEN 'YES'\n            WHEN r_Source_type <> f_entity_code THEN 'YES'\n            WHEN case when r_type='Year' then 'Y' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Month' then 'M' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Quarter' then 'Q' else null end <> f_timeframe_type THEN 'YES'\n            WHEN case when r_type='Week' then 'W' else null end <> f_timeframe_type THEN 'YES' --Month,Year,Quarter,Week\n            WHEN r_timeframe_type <> f_types_timeframe THEN 'YES'\n            WHEN r_year <> f_year THEN 'YES'\n            ELSE 'NO'\n            END as value_mismatch\n\n    from r_metric ,fs where r_metric.r_metric_id=fs.f_metric_id \n    and r_segment_name = f_segment_name\n    and SUBSTRING(CAST(r_type AS varchar(1100)),1,1) = f_timeframe_type\n    and TRIM(r_timeframe_type)= TRIM(f_types_timeframe)\n    and r_year=f_year\n    and r_Source_type=f_entity_code\n\n\n)  \n\n\n\nselect distinct * from compare_result -- where r_type='Month' and r_source_type ='GSC_ANANDLIVE_14052021' --and r_metric_id=93"}, "error": null, "status": "SUCCESS 1", "execution_time": 11.190531730651855, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-05-26T09:48:06.333488Z", "completed_at": "2021-05-26T09:48:06.376903Z"}, {"name": "execute", "started_at": "2021-05-26T09:48:06.377249Z", "completed_at": "2021-05-26T09:48:17.102196Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-05-26T09:48:19.649965Z", "elapsed_time": 61.10393023490906}