
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'DBTTest'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'DBTTest'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  DBTTest:
# source adapter general settings
      sources:
          materialized: view
          schema: staging
# intermediate layer settings
      intermediate:
          materialized: view
          schema: UAT_Testing   
      UAT_Testing:
          materialized: table
          schema: UAT_Testing    
      
# warehouse layer settings
      marts:
          materialized: table
          schema: marts
# source layer settings
      Stage_Layer:
          materialized: table
          schema: ETL
# intermediate layer settings
      Views:
          materialized: view
          schema: ETL    
# Reusable Code settings
      Views:
          materialized: view
          schema: ETL   
# warehouse layer settings
      Targets:
          materialized: table
          schema: ETL

# util module settings
      utils:
          materialized: table
          schema: logs

# seeds (reference files, loaded into tables) module settings
seeds:
  DBTTest:
    schema: seed
          
vars:
  enable_salesforce_source : true
  enable_crm_warehouse :                true
  enable_finance_warehouse :            false
  enable_projects_warehouse :           false
  enable_marketing_warehouse :          false
  enable_ads_warehouse :                false
  enable_product_warehouse :            false
  enable_subscriptions_warehouse :      false

  # Salesforce Schema and Table info
  
  salesforce_schema_name           : SALESFORCE_RK
  salesforce_crm_etl_name          : fivetran 
  salesforce_account_table_name    : account
  salesforce_lead_table_name       : lead
  salesforce_opportunity_table_name: opportunity
  salesforce_user_table_name       : user
  salesforce_user_role_table_name  : user_role
  salesforce_contact_table_name    : contact
  salesforce_case_table_name       : case
  salesforce_period_table_name     : period
  salesforce_Campaign_table_name   : Campaign
  salesforce_product_table_name    : # product_2
  salesforce_oppo_stage_table_name   : OPPORTUNITY_STAGE
  salesforce_opportunity_line_item_table_name: # OPPORTUNITY_LINE_ITEM 
  
  snapshot_sf_schema : snapshots
  opportunity_snap : OPPORTUNITY_SNAPSHOT_CHECK